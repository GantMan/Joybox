<?xml version='1.0'?>
<signatures version='1.0'>
<enum value='4' name='kAABBDrawFlag'/>
<enum value='16' name='kCenterOfMassDrawFlag'/>
<enum value='3' name='kChainShapeType'/>
<enum value='0' name='kCircleShapeType'/>
<enum value='2' name='kDynamicBodyType'/>
<enum value='1' name='kEdgeShapeType'/>
<enum value='2' name='kJointDrawFlag'/>
<enum value='1' name='kKinematicBodyType'/>
<enum value='8' name='kPairDrawFlag'/>
<enum value='2' name='kPolygonShapeType'/>
<enum value='1' name='kShapeDrawFlag'/>
<enum value='0' name='kStaticBodyType'/>
<enum value='4' name='kTypeCountShapeType'/>
<class name='B2DAABB'>
<method selector='initWithAABB:'>
<arg index='0' type='@' declared_type='id' name='aabb'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lowerBound'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setLowerBound:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='lowerBound'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpperBound:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='upperBound'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='upperBound'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DBody'>
<method selector='addFixtureForShape:friction:restitution:density:isSensor:'>
<arg index='0' type='@' declared_type='B2DShape*' name='shape'/>
<arg index='1' type='f' declared_type='CGFloat' name='friction'/>
<arg index='2' type='f' declared_type='CGFloat' name='restitution'/>
<arg index='3' type='f' declared_type='CGFloat' name='density'/>
<arg index='4' type='B' declared_type='BOOL' name='isSensor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularVelocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='applyAngularImpulse:'>
<arg index='0' type='f' declared_type='CGFloat' name='impulse'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForce:atLocation:asImpulse:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='force'/>
<arg index='1' type='{CGPoint=ff}' declared_type='CGPoint' name='location'/>
<arg index='2' type='B' declared_type='BOOL' name='asImpulse'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForce:atPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='force'/>
<arg index='1' type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForceToCenter:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='force'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyLinearImpulse:atPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='impulse'/>
<arg index='1' type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTorque:'>
<arg index='0' type='f' declared_type='CGFloat' name='torque'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTorque:asImpulse:'>
<arg index='0' type='f' declared_type='CGFloat' name='torque'/>
<arg index='1' type='B' declared_type='BOOL' name='impulse'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='awake'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='body'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='bullet'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='center'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='createFixture:'>
<arg index='0' type='@' declared_type='B2DFixtureDef*' name='fixtureDefinition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='createFixtureWithShape:andDensity:'>
<arg index='0' type='@' declared_type='B2DShape*' name='shape'/>
<arg index='1' type='f' declared_type='CGFloat' name='density'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='destroyFixture:'>
<arg index='0' type='@' declared_type='B2DFixture*' name='fixture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dump'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixedRotation'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='fixtureList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='gravityScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='inertia'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithBody:'>
<arg index='0' type='@' declared_type='id' name='boxBody'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isAwake'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isBullet'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isEqualToBody:'>
<arg index='0' type='@' declared_type='B2DBody*' name='aBody'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isFixedRotation'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isSleepingAllowed'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='linearDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='linearVelocity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='linearVelocityFromLocalPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='localPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='linearVelocityFromWorldPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='worldPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='localCenter'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='localPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='worldPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='localVector:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='worldVector'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='mass'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='massData'>
<retval type='@' declared_type='B2DMassData*'/>
</method>
<method selector='next'>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='resetMassData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularDamping:'>
<arg index='0' type='f' declared_type='CGFloat' name='angularDamping'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularVelocity:'>
<arg index='0' type='f' declared_type='CGFloat' name='angularVelocity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAwake:'>
<arg index='0' type='B' declared_type='_Bool' name='awake'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBody:'>
<arg index='0' type='^i' declared_type='int*' name='body'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBullet:'>
<arg index='0' type='B' declared_type='_Bool' name='bullet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixedRotation:'>
<arg index='0' type='B' declared_type='_Bool' name='fixedRotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravityScale:'>
<arg index='0' type='f' declared_type='CGFloat' name='gravityScale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearDamping:'>
<arg index='0' type='f' declared_type='CGFloat' name='linearDamping'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearVelocity:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='linearVelocity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMassData:'>
<arg index='0' type='@' declared_type='B2DMassData*' name='massData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSleepingAllowed:'>
<arg index='0' type='B' declared_type='_Bool' name='sleepingAllowed'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransformWithPosition:andAngle:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='position'/>
<arg index='1' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg index='0' type='i' declared_type='B2DBodyTypes' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' type='@' declared_type='id' name='userData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sleepingAllowed'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='transform'>
<retval type='@' declared_type='B2DTransform*'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DBodyTypes'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
<method selector='worldCenter'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='worldPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='localPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='worldVector:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='localVector'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DBodyDef'>
<method selector='active'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='allowSleep'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularVelocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='awake'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='bullet'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='fixedRotation'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='gravityScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithBodyDef:'>
<arg index='0' type='@' declared_type='id' name='bodyDef'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='linearDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='linearVelocity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setActive:'>
<arg index='0' type='B' declared_type='_Bool' name='active'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowSleep:'>
<arg index='0' type='B' declared_type='_Bool' name='allowSleep'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngle:'>
<arg index='0' type='f' declared_type='CGFloat' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularDamping:'>
<arg index='0' type='f' declared_type='CGFloat' name='angularDamping'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularVelocity:'>
<arg index='0' type='f' declared_type='CGFloat' name='angularVelocity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAwake:'>
<arg index='0' type='B' declared_type='_Bool' name='awake'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBullet:'>
<arg index='0' type='B' declared_type='_Bool' name='bullet'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixedRotation:'>
<arg index='0' type='B' declared_type='_Bool' name='fixedRotation'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravityScale:'>
<arg index='0' type='f' declared_type='CGFloat' name='gravityScale'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearDamping:'>
<arg index='0' type='f' declared_type='CGFloat' name='linearDamping'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearVelocity:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='linearVelocity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='position'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg index='0' type='i' declared_type='B2DBodyTypes' name='type'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DBodyTypes'/>
</method>
</class>
<class name='B2DChainShape'>
<method selector='createChainWithVertices:andVertexCount:'>
<arg index='0' type='^{CGPoint=ff}' declared_type='CGPoint*' name='vertices'/>
<arg index='1' type='i' declared_type='NSInteger' name='vertexCount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='createLoopWithVertices:andVertexCount:'>
<arg index='0' type='^{CGPoint=ff}' declared_type='CGPoint*' name='vertices'/>
<arg index='1' type='i' declared_type='NSInteger' name='vertexCount'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getChildEdge:withIndex:'>
<arg index='0' type='@' declared_type='B2DEdgeShape*' name='edgeShape'/>
<arg index='1' type='i' declared_type='NSInteger' name='index'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasNextVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='hasPreviousVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='nextVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='previousVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setNextVertex:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='vertex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreviousVertex:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='vertex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertexCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='vertices'>
<retval type='^{CGPoint=ff}' declared_type='CGPoint*'/>
</method>
</class>
<class name='B2DCircleShape'>
<method selector='getSupport:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='direction'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='getSupportVertex:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='direction'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='getVertex:'>
<arg index='0' type='i' declared_type='NSInteger' name='index'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithRadius:'>
<arg index='0' type='f' declared_type='CGFloat' name='radius'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='vertexCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='B2DColor'>
<method selector='blue'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='green'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='initWithColor:'>
<arg index='0' type='@' declared_type='id' name='color'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='red'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='setBlue:'>
<arg index='0' type='f' declared_type='Float32' name='blue'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGreen:'>
<arg index='0' type='f' declared_type='Float32' name='green'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRed:'>
<arg index='0' type='f' declared_type='Float32' name='red'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DContactFilter'>
<method selector='contactFilter'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='setContactFilter:'>
<arg index='0' type='^i' declared_type='int*' name='contactFilter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldCollide:'>
<arg index='0' type='@?' function_pointer='true' declared_type='shouldCollideCallback' name='shouldCollide'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldCollide'>
<retval type='@?' function_pointer='true' declared_type='shouldCollideCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</retval>
</method>
</class>
<class name='B2DContactListener'>
<method selector='beginContact'>
<retval type='@?' function_pointer='true' declared_type='beginContactCallback'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='contactListener'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='endContact'>
<retval type='@?' function_pointer='true' declared_type='endContactCallback'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setBeginContact:'>
<arg index='0' type='@?' function_pointer='true' declared_type='beginContactCallback' name='beginContact'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactListener:'>
<arg index='0' type='^i' declared_type='int*' name='contactListener'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndContact:'>
<arg index='0' type='@?' function_pointer='true' declared_type='endContactCallback' name='endContact'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DDestructionListener'>
<method selector='destructionListener'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='fixtureSayGoodbye'>
<retval type='@?' function_pointer='true' declared_type='fixtureSayGoodbyeCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setDestructionListener:'>
<arg index='0' type='^i' declared_type='int*' name='destructionListener'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixtureSayGoodbye:'>
<arg index='0' type='@?' function_pointer='true' declared_type='fixtureSayGoodbyeCallback' name='fixtureSayGoodbye'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DDraw'>
<method selector='appendDrawFlags:'>
<arg index='0' type='I' declared_type='unsigned int' name='flags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearDrawFlags:'>
<arg index='0' type='I' declared_type='unsigned int' name='flags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draw'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='drawCircle'>
<retval type='@?' function_pointer='true' declared_type='drawCircleCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawFlags'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='drawPolygon'>
<retval type='@?' function_pointer='true' declared_type='drawPolygonCallback'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawSegment'>
<retval type='@?' function_pointer='true' declared_type='drawSegmentCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawSolidCircle'>
<retval type='@?' function_pointer='true' declared_type='drawSolidCircleCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawSolidPolygon'>
<retval type='@?' function_pointer='true' declared_type='drawSolidPolygonCallback'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawTransform'>
<retval type='@?' function_pointer='true' declared_type='drawTransformCallback'>
<arg type='@' declared_type='B2DTransform*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setDraw:'>
<arg index='0' type='^i' declared_type='int*' name='draw'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawCircle:'>
<arg index='0' type='@?' function_pointer='true' declared_type='drawCircleCallback' name='drawCircle'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawFlags:'>
<arg index='0' type='I' declared_type='unsigned int' name='drawFlags'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawPolygon:'>
<arg index='0' type='@?' function_pointer='true' declared_type='drawPolygonCallback' name='drawPolygon'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawSegment:'>
<arg index='0' type='@?' function_pointer='true' declared_type='drawSegmentCallback' name='drawSegment'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawSolidCircle:'>
<arg index='0' type='@?' function_pointer='true' declared_type='drawSolidCircleCallback' name='drawSolidCircle'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawSolidPolygon:'>
<arg index='0' type='@?' function_pointer='true' declared_type='drawSolidPolygonCallback' name='drawSolidPolygon'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawTransform:'>
<arg index='0' type='@?' function_pointer='true' declared_type='drawTransformCallback' name='drawTransform'>
<arg type='@' declared_type='B2DTransform*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DEdgeShape'>
<method selector='endAdjacentVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='endVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='hasEndAdjacentVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='hasStartAdjacentVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='initWithStartPoint:endPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='startPoint'/>
<arg index='1' type='{CGPoint=ff}' declared_type='CGPoint' name='endPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStartVertex:endVertex:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='startVertex'/>
<arg index='1' type='{CGPoint=ff}' declared_type='CGPoint' name='endVertex'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='startAdjacentVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='startVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DFilter'>
<method selector='categoryBits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='groupIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithFilter:'>
<arg index='0' type='@' declared_type='id' name='filter'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='maskBits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setCategoryBits:'>
<arg index='0' type='I' declared_type='NSUInteger' name='categoryBits'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupIndex:'>
<arg index='0' type='i' declared_type='NSInteger' name='groupIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaskBits:'>
<arg index='0' type='I' declared_type='NSUInteger' name='maskBits'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DFixture'>
<method selector='aabb:'>
<arg index='0' type='i' declared_type='NSInteger' name='childIndex'/>
<retval type='@' declared_type='B2DAABB*'/>
</method>
<method selector='body'>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='density'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='dump:'>
<arg index='0' type='i' declared_type='NSInteger' name='bodyIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterData'>
<retval type='@' declared_type='B2DFilter*'/>
</method>
<method selector='fixture'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='friction'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithFixture:'>
<arg index='0' type='@' declared_type='id' name='boxFixture'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSensor'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='massData'>
<retval type='@' declared_type='B2DMassData*'/>
</method>
<method selector='next'>
<retval type='@' declared_type='B2DFixture*'/>
</method>
<method selector='rayCastWithOutput:input:andChildIndex:'>
<arg index='0' type='@' declared_type='B2DRayCastOutput*' name='output'/>
<arg index='1' type='@' declared_type='B2DRayCastInput*' name='input'/>
<arg index='2' type='i' declared_type='NSInteger' name='childIndex'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='refilter'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restitution'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='sensor'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='setDensity:'>
<arg index='0' type='f' declared_type='CGFloat' name='density'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilterData:'>
<arg index='0' type='@' declared_type='B2DFilter*' name='filterData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixture:'>
<arg index='0' type='^i' declared_type='int*' name='fixture'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFriction:'>
<arg index='0' type='f' declared_type='CGFloat' name='friction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestitution:'>
<arg index='0' type='f' declared_type='CGFloat' name='restitution'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSensor:'>
<arg index='0' type='B' declared_type='_Bool' name='sensor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' type='@' declared_type='id' name='userData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='B2DShape*'/>
</method>
<method selector='testPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DShapeTypes'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DFixtureDef'>
<method selector='density'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='friction'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='isSensor'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='restitution'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setDensity:'>
<arg index='0' type='f' declared_type='CGFloat' name='density'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFriction:'>
<arg index='0' type='f' declared_type='CGFloat' name='friction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsSensor:'>
<arg index='0' type='B' declared_type='_Bool' name='isSensor'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestitution:'>
<arg index='0' type='f' declared_type='CGFloat' name='restitution'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShape:'>
<arg index='0' type='@' declared_type='B2DShape*' name='shape'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' type='@' declared_type='id' name='userData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='B2DShape*'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DMassData'>
<method selector='I'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='centre'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithMassData:'>
<arg index='0' type='@' declared_type='id' name='massData'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mass'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='setCentre:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='centre'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setI:'>
<arg index='0' type='f' declared_type='Float32' name='I'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMass:'>
<arg index='0' type='f' declared_type='Float32' name='mass'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DPolygonShape'>
<method selector='centroid'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='getVertex:'>
<arg index='0' type='i' declared_type='NSInteger' name='index'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithBoxSize:'>
<arg index='0' type='{CGSize=ff}' declared_type='CGSize' name='boxSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHalfWidth:andHalfHeight:'>
<arg index='0' type='f' declared_type='CGFloat' name='halfWidth'/>
<arg index='1' type='f' declared_type='CGFloat' name='halfHeight'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHalfWidth:halfHeight:center:andAngle:'>
<arg index='0' type='f' declared_type='CGFloat' name='halfWidth'/>
<arg index='1' type='f' declared_type='CGFloat' name='halfHeight'/>
<arg index='2' type='{CGPoint=ff}' declared_type='CGPoint' name='center'/>
<arg index='3' type='f' declared_type='CGFloat' name='angle'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVertices:andVertexCount:'>
<arg index='0' type='^{CGPoint=ff}' declared_type='CGPoint*' name='vertices'/>
<arg index='1' type='i' declared_type='NSInteger' name='vertexCount'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normals'>
<retval type='^{CGPoint=ff}' declared_type='CGPoint*'/>
</method>
<method selector='vertexCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='vertices'>
<retval type='^{CGPoint=ff}' declared_type='CGPoint*'/>
</method>
</class>
<class name='B2DProfile'>
<method selector='broadphase'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='collide'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setBroadphase:'>
<arg index='0' type='f' declared_type='CGFloat' name='broadphase'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCollide:'>
<arg index='0' type='f' declared_type='CGFloat' name='collide'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolve:'>
<arg index='0' type='f' declared_type='CGFloat' name='solve'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolveInit:'>
<arg index='0' type='f' declared_type='CGFloat' name='solveInit'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolvePosition:'>
<arg index='0' type='f' declared_type='CGFloat' name='solvePosition'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolveTOI:'>
<arg index='0' type='f' declared_type='CGFloat' name='solveTOI'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolveVelocity:'>
<arg index='0' type='f' declared_type='CGFloat' name='solveVelocity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStep:'>
<arg index='0' type='f' declared_type='CGFloat' name='step'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='solve'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solveInit'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solvePosition'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solveTOI'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solveVelocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='step'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='B2DQueryCallback'>
<method selector='queryCallback'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='reportFixture'>
<retval type='@?' function_pointer='true' declared_type='reportQueryFixtureCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</retval>
</method>
<method selector='setQueryCallback:'>
<arg index='0' type='^i' declared_type='int*' name='queryCallback'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReportFixture:'>
<arg index='0' type='@?' function_pointer='true' declared_type='reportQueryFixtureCallback' name='reportFixture'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DRayCastCallback'>
<method selector='rayCastCallback'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='reportFixture'>
<retval type='@?' function_pointer='true' declared_type='reportRaycastFixtureCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='CGFloat'/>
<retval type='f' declared_type='float'/>
</retval>
</method>
<method selector='setRayCastCallback:'>
<arg index='0' type='^i' declared_type='int*' name='rayCastCallback'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReportFixture:'>
<arg index='0' type='@?' function_pointer='true' declared_type='reportRaycastFixtureCallback' name='reportFixture'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='CGFloat'/>
<retval type='f' declared_type='float'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DRayCastInput'>
<method selector='initWithRayCastInput:'>
<arg index='0' type='@' declared_type='id' name='rayCastInput'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='maxFraction'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='point1'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='point2'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setMaxFraction:'>
<arg index='0' type='f' declared_type='Float32' name='maxFraction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPoint1:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='point1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPoint2:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='point2'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DRayCastOutput'>
<method selector='fraction'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='initWithRayCastOutput:'>
<arg index='0' type='@' declared_type='id' name='rayCastOutput'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normal'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setFraction:'>
<arg index='0' type='f' declared_type='Float32' name='fraction'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormal:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='normal'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DShape'>
<method selector='childCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='computeAABB:withTransform:andChildIndex:'>
<arg index='0' type='@' declared_type='B2DAABB*' name='aabb'/>
<arg index='1' type='@' declared_type='B2DTransform*' name='transform'/>
<arg index='2' type='i' declared_type='NSInteger' name='childIndex'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='computeMass:withDensity:'>
<arg index='0' type='@' declared_type='B2DMassData*' name='massData'/>
<arg index='1' type='f' declared_type='CGFloat' name='density'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithShape:'>
<arg index='0' type='@' declared_type='id' name='boxShape'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='radius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='rayCastWithOutput:input:transform:andChildren:'>
<arg index='0' type='@' declared_type='B2DRayCastOutput*' name='output'/>
<arg index='1' type='@' declared_type='B2DRayCastInput*' name='input'/>
<arg index='2' type='@' declared_type='B2DTransform*' name='transform'/>
<arg index='3' type='i' declared_type='NSInteger' name='childIndex'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='setShape:'>
<arg index='0' type='^i' declared_type='int*' name='shape'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='testPointWithTransform:andPoint:'>
<arg index='0' type='@' declared_type='B2DTransform*' name='transform'/>
<arg index='1' type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DShapeTypes'/>
</method>
</class>
<class name='B2DTransform'>
<method selector='angle'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='initWithTransform:'>
<arg index='0' type='@' declared_type='id' name='transform'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='point'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAngle:'>
<arg index='0' type='f' declared_type='Float32' name='angle'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPoint:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='point'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DWorld'>
<method selector='addContactListener:'>
<arg index='0' type='@' declared_type='B2DContactListener*' name='contactListener'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsSleeping'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='autoClearForces'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='bodyCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='bodyList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='clearForces'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contactCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='continuousPhysics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createBody:'>
<arg index='0' type='@' declared_type='B2DBodyDef*' name='bodyDefinition'/>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='createBodyInPosition:type:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='position'/>
<arg index='1' type='i' declared_type='B2DBodyTypes' name='bodyType'/>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='destroyBody:'>
<arg index='0' type='@' declared_type='B2DBody*' name='body'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawDebugData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='dump'>
<retval type='v' declared_type='void'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithWorld:'>
<arg index='0' type='@' declared_type='id' name='boxWorld'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLocked'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='jointCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='profile'>
<retval type='@' declared_type='B2DProfile*'/>
</method>
<method selector='proxyCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='queryAABBWithCallback:andAABB:'>
<arg index='0' type='@' declared_type='B2DQueryCallback*' name='queryCallback'/>
<arg index='1' type='@' declared_type='B2DAABB*' name='aabb'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rayCastWithCallback:andPoint1:andPoint2:'>
<arg index='0' type='@' declared_type='B2DRayCastCallback*' name='rayCastCallback'/>
<arg index='1' type='{CGPoint=ff}' declared_type='CGPoint' name='point1'/>
<arg index='2' type='{CGPoint=ff}' declared_type='CGPoint' name='point2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeBody:'>
<arg index='0' type='@' declared_type='B2DBody*' name='body'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsSleeping:'>
<arg index='0' type='B' declared_type='_Bool' name='allowsSleeping'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoClearForces:'>
<arg index='0' type='B' declared_type='_Bool' name='autoClearForces'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactFilter:'>
<arg index='0' type='@' declared_type='B2DContactFilter*' name='contactFilter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactListener:'>
<arg index='0' type='@' declared_type='B2DContactListener*' name='contactListener'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuousPhysics:'>
<arg index='0' type='B' declared_type='BOOL' name='continuousPhysics'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDebugDraw:'>
<arg index='0' type='@' declared_type='B2DDraw*' name='draw'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestructionListener:'>
<arg index='0' type='@' declared_type='B2DDestructionListener*' name='destructionListener'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg index='0' type='{CGPoint=ff}' declared_type='CGPoint' name='gravity'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWorld:'>
<arg index='0' type='^i' declared_type='int*' name='world'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stepWithDelta:velocityInteractions:positionInteractions:'>
<arg index='0' type='f' declared_type='CGFloat' name='delta'/>
<arg index='1' type='i' declared_type='int' name='velocityInteractions'/>
<arg index='2' type='i' declared_type='int' name='positionInteractions'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='treeBalance'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='treeHeight'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='treeQuality'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='world'>
<retval type='^i' declared_type='int*'/>
</method>
</class>
</signatures>
