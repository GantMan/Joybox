<?xml version='1.0'?>
<signatures version='1.0'>
<enum name='kAABBDrawFlag' value='4'/>
<enum name='kCenterOfMassDrawFlag' value='16'/>
<enum name='kChainShapeType' value='3'/>
<enum name='kCircleShapeType' value='0'/>
<enum name='kDynamicBodyType' value='2'/>
<enum name='kEdgeShapeType' value='1'/>
<enum name='kJointDrawFlag' value='2'/>
<enum name='kKinematicBodyType' value='1'/>
<enum name='kPairDrawFlag' value='8'/>
<enum name='kPolygonShapeType' value='2'/>
<enum name='kShapeDrawFlag' value='1'/>
<enum name='kStaticBodyType' value='0'/>
<enum name='kTypeCountShapeType' value='4'/>
<class name='B2DAABB'>
<method selector='initWithAABB:'>
<arg index='0' name='aabb' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='lowerBound'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setLowerBound:'>
<arg index='0' name='lowerBound' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUpperBound:'>
<arg index='0' name='upperBound' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='upperBound'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DBody'>
<method selector='addFixtureForShape:friction:restitution:density:isSensor:'>
<arg index='0' name='shape' type='@' declared_type='B2DShape*'/>
<arg index='1' name='friction' type='f' declared_type='CGFloat'/>
<arg index='2' name='restitution' type='f' declared_type='CGFloat'/>
<arg index='3' name='density' type='f' declared_type='CGFloat'/>
<arg index='4' name='isSensor' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularVelocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='applyAngularImpulse:'>
<arg index='0' name='impulse' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForce:atLocation:asImpulse:'>
<arg index='0' name='force' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='1' name='location' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='2' name='asImpulse' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForce:atPoint:'>
<arg index='0' name='force' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='1' name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForceToCenter:'>
<arg index='0' name='force' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyLinearImpulse:atPoint:'>
<arg index='0' name='impulse' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='1' name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTorque:'>
<arg index='0' name='torque' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTorque:asImpulse:'>
<arg index='0' name='torque' type='f' declared_type='CGFloat'/>
<arg index='1' name='impulse' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='awake'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='body'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='bullet'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='center'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='createFixture:'>
<arg index='0' name='fixtureDefinition' type='@' declared_type='B2DFixtureDef*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='createFixtureWithShape:andDensity:'>
<arg index='0' name='shape' type='@' declared_type='B2DShape*'/>
<arg index='1' name='density' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='destroyFixture:'>
<arg index='0' name='fixture' type='@' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dump'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixedRotation'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='fixtureList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='gravityScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='inertia'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithBody:'>
<arg index='0' name='boxBody' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isAwake'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isBullet'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isEqualToBody:'>
<arg index='0' name='aBody' type='@' declared_type='B2DBody*'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isFixedRotation'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='isSleepingAllowed'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='linearDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='linearVelocity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='linearVelocityFromLocalPoint:'>
<arg index='0' name='localPoint' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='linearVelocityFromWorldPoint:'>
<arg index='0' name='worldPoint' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='localCenter'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='localPoint:'>
<arg index='0' name='worldPoint' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='localVector:'>
<arg index='0' name='worldVector' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='mass'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='massData'>
<retval type='@' declared_type='B2DMassData*'/>
</method>
<method selector='next'>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='resetMassData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularDamping:'>
<arg index='0' name='angularDamping' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularVelocity:'>
<arg index='0' name='angularVelocity' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAwake:'>
<arg index='0' name='awake' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBody:'>
<arg index='0' name='body' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBullet:'>
<arg index='0' name='bullet' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixedRotation:'>
<arg index='0' name='fixedRotation' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravityScale:'>
<arg index='0' name='gravityScale' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearDamping:'>
<arg index='0' name='linearDamping' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearVelocity:'>
<arg index='0' name='linearVelocity' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMassData:'>
<arg index='0' name='massData' type='@' declared_type='B2DMassData*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' name='position' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSleepingAllowed:'>
<arg index='0' name='sleepingAllowed' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransformWithPosition:andAngle:'>
<arg index='0' name='position' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='1' name='angle' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg index='0' name='type' type='i' declared_type='B2DBodyTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' name='userData' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sleepingAllowed'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='transform'>
<retval type='@' declared_type='B2DTransform*'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DBodyTypes'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
<method selector='worldCenter'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='worldPoint:'>
<arg index='0' name='localPoint' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='worldVector:'>
<arg index='0' name='localVector' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DBodyDef'>
<method selector='active'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='allowSleep'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='angle'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='angularVelocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='awake'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='bullet'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='fixedRotation'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='gravityScale'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithBodyDef:'>
<arg index='0' name='bodyDef' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='linearDamping'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='linearVelocity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setActive:'>
<arg index='0' name='active' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowSleep:'>
<arg index='0' name='allowSleep' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngle:'>
<arg index='0' name='angle' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularDamping:'>
<arg index='0' name='angularDamping' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularVelocity:'>
<arg index='0' name='angularVelocity' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAwake:'>
<arg index='0' name='awake' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBullet:'>
<arg index='0' name='bullet' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixedRotation:'>
<arg index='0' name='fixedRotation' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravityScale:'>
<arg index='0' name='gravityScale' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearDamping:'>
<arg index='0' name='linearDamping' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearVelocity:'>
<arg index='0' name='linearVelocity' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg index='0' name='position' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg index='0' name='type' type='i' declared_type='B2DBodyTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DBodyTypes'/>
</method>
</class>
<class name='B2DChainShape'>
<method selector='createChainWithVertices:andVertexCount:'>
<arg index='0' name='vertices' type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg index='1' name='vertexCount' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='createLoopWithVertices:andVertexCount:'>
<arg index='0' name='vertices' type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg index='1' name='vertexCount' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getChildEdge:withIndex:'>
<arg index='0' name='edgeShape' type='@' declared_type='B2DEdgeShape*'/>
<arg index='1' name='index' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasNextVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='hasPreviousVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='nextVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='previousVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setNextVertex:'>
<arg index='0' name='vertex' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreviousVertex:'>
<arg index='0' name='vertex' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertexCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='vertices'>
<retval type='^{CGPoint=ff}' declared_type='CGPoint*'/>
</method>
</class>
<class name='B2DCircleShape'>
<method selector='getSupport:'>
<arg index='0' name='direction' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='getSupportVertex:'>
<arg index='0' name='direction' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='getVertex:'>
<arg index='0' name='index' type='i' declared_type='NSInteger'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithRadius:'>
<arg index='0' name='radius' type='f' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='vertexCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
</class>
<class name='B2DColor'>
<method selector='blue'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='green'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='initWithColor:'>
<arg index='0' name='color' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='red'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='setBlue:'>
<arg index='0' name='blue' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGreen:'>
<arg index='0' name='green' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRed:'>
<arg index='0' name='red' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DContactFilter'>
<method selector='contactFilter'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='setContactFilter:'>
<arg index='0' name='contactFilter' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldCollide:'>
<arg index='0' name='shouldCollide' type='@?' function_pointer='true' declared_type='shouldCollideCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldCollide'>
<retval type='@?' function_pointer='true' declared_type='shouldCollideCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</retval>
</method>
</class>
<class name='B2DContactListener'>
<method selector='beginContact'>
<retval type='@?' function_pointer='true' declared_type='beginContactCallback'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='contactListener'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='endContact'>
<retval type='@?' function_pointer='true' declared_type='endContactCallback'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setBeginContact:'>
<arg index='0' name='beginContact' type='@?' function_pointer='true' declared_type='beginContactCallback'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactListener:'>
<arg index='0' name='contactListener' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndContact:'>
<arg index='0' name='endContact' type='@?' function_pointer='true' declared_type='endContactCallback'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DDestructionListener'>
<method selector='destructionListener'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='fixtureSayGoodbye'>
<retval type='@?' function_pointer='true' declared_type='fixtureSayGoodbyeCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setDestructionListener:'>
<arg index='0' name='destructionListener' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixtureSayGoodbye:'>
<arg index='0' name='fixtureSayGoodbye' type='@?' function_pointer='true' declared_type='fixtureSayGoodbyeCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DDraw'>
<method selector='appendDrawFlags:'>
<arg index='0' name='flags' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='clearDrawFlags:'>
<arg index='0' name='flags' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='draw'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='drawCircle'>
<retval type='@?' function_pointer='true' declared_type='drawCircleCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawFlags'>
<retval type='I' declared_type='unsigned int'/>
</method>
<method selector='drawPolygon'>
<retval type='@?' function_pointer='true' declared_type='drawPolygonCallback'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawSegment'>
<retval type='@?' function_pointer='true' declared_type='drawSegmentCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawSolidCircle'>
<retval type='@?' function_pointer='true' declared_type='drawSolidCircleCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawSolidPolygon'>
<retval type='@?' function_pointer='true' declared_type='drawSolidPolygonCallback'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='drawTransform'>
<retval type='@?' function_pointer='true' declared_type='drawTransformCallback'>
<arg type='@' declared_type='B2DTransform*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setDraw:'>
<arg index='0' name='draw' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawCircle:'>
<arg index='0' name='drawCircle' type='@?' function_pointer='true' declared_type='drawCircleCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawFlags:'>
<arg index='0' name='drawFlags' type='I' declared_type='unsigned int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawPolygon:'>
<arg index='0' name='drawPolygon' type='@?' function_pointer='true' declared_type='drawPolygonCallback'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawSegment:'>
<arg index='0' name='drawSegment' type='@?' function_pointer='true' declared_type='drawSegmentCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawSolidCircle:'>
<arg index='0' name='drawSolidCircle' type='@?' function_pointer='true' declared_type='drawSolidCircleCallback'>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='float'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawSolidPolygon:'>
<arg index='0' name='drawSolidPolygon' type='@?' function_pointer='true' declared_type='drawSolidPolygonCallback'>
<arg type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg type='i' declared_type='NSInteger'/>
<arg type='@' declared_type='B2DColor*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDrawTransform:'>
<arg index='0' name='drawTransform' type='@?' function_pointer='true' declared_type='drawTransformCallback'>
<arg type='@' declared_type='B2DTransform*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DEdgeShape'>
<method selector='endAdjacentVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='endVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='hasEndAdjacentVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='hasStartAdjacentVertex'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='initWithStartPoint:endPoint:'>
<arg index='0' name='startPoint' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='1' name='endPoint' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStartVertex:endVertex:'>
<arg index='0' name='startVertex' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='1' name='endVertex' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='startAdjacentVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='startVertex'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DFilter'>
<method selector='categoryBits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='groupIndex'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='initWithFilter:'>
<arg index='0' name='filter' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='maskBits'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='setCategoryBits:'>
<arg index='0' name='categoryBits' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGroupIndex:'>
<arg index='0' name='groupIndex' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMaskBits:'>
<arg index='0' name='maskBits' type='I' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DFixture'>
<method selector='aabb:'>
<arg index='0' name='childIndex' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='B2DAABB*'/>
</method>
<method selector='body'>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='density'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='dump:'>
<arg index='0' name='bodyIndex' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterData'>
<retval type='@' declared_type='B2DFilter*'/>
</method>
<method selector='fixture'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='friction'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='initWithFixture:'>
<arg index='0' name='boxFixture' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSensor'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='massData'>
<retval type='@' declared_type='B2DMassData*'/>
</method>
<method selector='next'>
<retval type='@' declared_type='B2DFixture*'/>
</method>
<method selector='rayCastWithOutput:input:andChildIndex:'>
<arg index='0' name='output' type='@' declared_type='B2DRayCastOutput*'/>
<arg index='1' name='input' type='@' declared_type='B2DRayCastInput*'/>
<arg index='2' name='childIndex' type='i' declared_type='NSInteger'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='refilter'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restitution'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='sensor'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='setDensity:'>
<arg index='0' name='density' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilterData:'>
<arg index='0' name='filterData' type='@' declared_type='B2DFilter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixture:'>
<arg index='0' name='fixture' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFriction:'>
<arg index='0' name='friction' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestitution:'>
<arg index='0' name='restitution' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSensor:'>
<arg index='0' name='sensor' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' name='userData' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='B2DShape*'/>
</method>
<method selector='testPoint:'>
<arg index='0' name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DShapeTypes'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DFixtureDef'>
<method selector='density'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='friction'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='isSensor'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='restitution'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setDensity:'>
<arg index='0' name='density' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFriction:'>
<arg index='0' name='friction' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setIsSensor:'>
<arg index='0' name='isSensor' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestitution:'>
<arg index='0' name='restitution' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShape:'>
<arg index='0' name='shape' type='@' declared_type='B2DShape*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg index='0' name='userData' type='@' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='B2DShape*'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DMassData'>
<method selector='I'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='centre'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithMassData:'>
<arg index='0' name='massData' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='mass'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='setCentre:'>
<arg index='0' name='centre' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setI:'>
<arg index='0' name='I' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMass:'>
<arg index='0' name='mass' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DPolygonShape'>
<method selector='centroid'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='getVertex:'>
<arg index='0' name='index' type='i' declared_type='NSInteger'/>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithBoxSize:'>
<arg index='0' name='boxSize' type='{CGSize=ff}' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHalfWidth:andHalfHeight:'>
<arg index='0' name='halfWidth' type='f' declared_type='CGFloat'/>
<arg index='1' name='halfHeight' type='f' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHalfWidth:halfHeight:center:andAngle:'>
<arg index='0' name='halfWidth' type='f' declared_type='CGFloat'/>
<arg index='1' name='halfHeight' type='f' declared_type='CGFloat'/>
<arg index='2' name='center' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='3' name='angle' type='f' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVertices:andVertexCount:'>
<arg index='0' name='vertices' type='^{CGPoint=ff}' declared_type='CGPoint*'/>
<arg index='1' name='vertexCount' type='i' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normals'>
<retval type='^{CGPoint=ff}' declared_type='CGPoint*'/>
</method>
<method selector='vertexCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='vertices'>
<retval type='^{CGPoint=ff}' declared_type='CGPoint*'/>
</method>
</class>
<class name='B2DProfile'>
<method selector='broadphase'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='collide'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='setBroadphase:'>
<arg index='0' name='broadphase' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setCollide:'>
<arg index='0' name='collide' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolve:'>
<arg index='0' name='solve' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolveInit:'>
<arg index='0' name='solveInit' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolvePosition:'>
<arg index='0' name='solvePosition' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolveTOI:'>
<arg index='0' name='solveTOI' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSolveVelocity:'>
<arg index='0' name='solveVelocity' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStep:'>
<arg index='0' name='step' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='solve'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solveInit'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solvePosition'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solveTOI'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='solveVelocity'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='step'>
<retval type='f' declared_type='CGFloat'/>
</method>
</class>
<class name='B2DQueryCallback'>
<method selector='queryCallback'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='reportFixture'>
<retval type='@?' function_pointer='true' declared_type='reportQueryFixtureCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</retval>
</method>
<method selector='setQueryCallback:'>
<arg index='0' name='queryCallback' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReportFixture:'>
<arg index='0' name='reportFixture' type='@?' function_pointer='true' declared_type='reportQueryFixtureCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DRayCastCallback'>
<method selector='rayCastCallback'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='reportFixture'>
<retval type='@?' function_pointer='true' declared_type='reportRaycastFixtureCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='CGFloat'/>
<retval type='f' declared_type='float'/>
</retval>
</method>
<method selector='setRayCastCallback:'>
<arg index='0' name='rayCastCallback' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReportFixture:'>
<arg index='0' name='reportFixture' type='@?' function_pointer='true' declared_type='reportRaycastFixtureCallback'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg type='f' declared_type='CGFloat'/>
<retval type='f' declared_type='float'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DRayCastInput'>
<method selector='initWithRayCastInput:'>
<arg index='0' name='rayCastInput' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='maxFraction'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='point1'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='point2'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setMaxFraction:'>
<arg index='0' name='maxFraction' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPoint1:'>
<arg index='0' name='point1' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPoint2:'>
<arg index='0' name='point2' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DRayCastOutput'>
<method selector='fraction'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='initWithRayCastOutput:'>
<arg index='0' name='rayCastOutput' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normal'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setFraction:'>
<arg index='0' name='fraction' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNormal:'>
<arg index='0' name='normal' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DShape'>
<method selector='childCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='computeAABB:withTransform:andChildIndex:'>
<arg index='0' name='aabb' type='@' declared_type='B2DAABB*'/>
<arg index='1' name='transform' type='@' declared_type='B2DTransform*'/>
<arg index='2' name='childIndex' type='i' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='computeMass:withDensity:'>
<arg index='0' name='massData' type='@' declared_type='B2DMassData*'/>
<arg index='1' name='density' type='f' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithShape:'>
<arg index='0' name='boxShape' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='radius'>
<retval type='f' declared_type='CGFloat'/>
</method>
<method selector='rayCastWithOutput:input:transform:andChildren:'>
<arg index='0' name='output' type='@' declared_type='B2DRayCastOutput*'/>
<arg index='1' name='input' type='@' declared_type='B2DRayCastInput*'/>
<arg index='2' name='transform' type='@' declared_type='B2DTransform*'/>
<arg index='3' name='childIndex' type='i' declared_type='NSInteger'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='setShape:'>
<arg index='0' name='shape' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='testPointWithTransform:andPoint:'>
<arg index='0' name='transform' type='@' declared_type='B2DTransform*'/>
<arg index='1' name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DShapeTypes'/>
</method>
</class>
<class name='B2DTransform'>
<method selector='angle'>
<retval type='f' declared_type='Float32'/>
</method>
<method selector='initWithTransform:'>
<arg index='0' name='transform' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='point'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='setAngle:'>
<arg index='0' name='angle' type='f' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPoint:'>
<arg index='0' name='point' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DWorld'>
<method selector='addContactListener:'>
<arg index='0' name='contactListener' type='@' declared_type='B2DContactListener*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsSleeping'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='autoClearForces'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='bodyCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='bodyList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='clearForces'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contactCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='continuousPhysics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createBody:'>
<arg index='0' name='bodyDefinition' type='@' declared_type='B2DBodyDef*'/>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='createBodyInPosition:type:'>
<arg index='0' name='position' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='1' name='bodyType' type='i' declared_type='B2DBodyTypes'/>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='destroyBody:'>
<arg index='0' name='body' type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='drawDebugData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='dump'>
<retval type='v' declared_type='void'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' declared_type='CGPoint'/>
</method>
<method selector='initWithWorld:'>
<arg index='0' name='boxWorld' type='@' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLocked'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='jointCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='profile'>
<retval type='@' declared_type='B2DProfile*'/>
</method>
<method selector='proxyCount'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='queryAABBWithCallback:andAABB:'>
<arg index='0' name='queryCallback' type='@' declared_type='B2DQueryCallback*'/>
<arg index='1' name='aabb' type='@' declared_type='B2DAABB*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rayCastWithCallback:andPoint1:andPoint2:'>
<arg index='0' name='rayCastCallback' type='@' declared_type='B2DRayCastCallback*'/>
<arg index='1' name='point1' type='{CGPoint=ff}' declared_type='CGPoint'/>
<arg index='2' name='point2' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeBody:'>
<arg index='0' name='body' type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsSleeping:'>
<arg index='0' name='allowsSleeping' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoClearForces:'>
<arg index='0' name='autoClearForces' type='B' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactFilter:'>
<arg index='0' name='contactFilter' type='@' declared_type='B2DContactFilter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactListener:'>
<arg index='0' name='contactListener' type='@' declared_type='B2DContactListener*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuousPhysics:'>
<arg index='0' name='continuousPhysics' type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDebugDraw:'>
<arg index='0' name='draw' type='@' declared_type='B2DDraw*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestructionListener:'>
<arg index='0' name='destructionListener' type='@' declared_type='B2DDestructionListener*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg index='0' name='gravity' type='{CGPoint=ff}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWorld:'>
<arg index='0' name='world' type='^i' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stepWithDelta:velocityInteractions:positionInteractions:'>
<arg index='0' name='delta' type='f' declared_type='CGFloat'/>
<arg index='1' name='velocityInteractions' type='i' declared_type='int'/>
<arg index='2' name='positionInteractions' type='i' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='treeBalance'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='treeHeight'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='treeQuality'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='world'>
<retval type='^i' declared_type='int*'/>
</method>
</class>
</signatures>
