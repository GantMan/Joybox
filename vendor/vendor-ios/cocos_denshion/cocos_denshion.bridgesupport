<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{_bufferInfo=&quot;bufferId&quot;I&quot;bufferState&quot;i&quot;bufferData&quot;^v&quot;format&quot;i&quot;sizeInBytes&quot;i&quot;frequencyInHertz&quot;i}' name='bufferInfo'>
<field type='I' name='bufferId' declared_type='ALuint'/>
<field type='i' name='bufferState' declared_type='int'/>
<field type='^v' name='bufferData' declared_type='void*'/>
<field type='i' name='format' declared_type='ALenum'/>
<field type='i' name='sizeInBytes' declared_type='ALsizei'/>
<field type='i' name='frequencyInHertz' declared_type='ALsizei'/>
</struct>
<struct type='{_sourceGroup=&quot;startIndex&quot;i&quot;currentIndex&quot;i&quot;totalSources&quot;i&quot;enabled&quot;B&quot;nonInterruptible&quot;B&quot;sourceStatuses&quot;^i}' name='sourceGroup'>
<field type='i' name='startIndex' declared_type='int'/>
<field type='i' name='currentIndex' declared_type='int'/>
<field type='i' name='totalSources' declared_type='int'/>
<field type='B' name='enabled' declared_type='_Bool'/>
<field type='B' name='nonInterruptible' declared_type='_Bool'/>
<field type='^i' name='sourceStatuses' declared_type='int*'/>
</struct>
<struct type='{_sourceInfo=&quot;usable&quot;B&quot;sourceId&quot;I&quot;attachedBufferId&quot;I}' name='sourceInfo'>
<field type='B' name='usable' declared_type='_Bool'/>
<field type='I' name='sourceId' declared_type='ALuint'/>
<field type='I' name='attachedBufferId' declared_type='ALuint'/>
</struct>
<constant type='@' name='AVAudioSessionCategoryAmbient' const='true' declared_type='NSString*'/>
<constant type='@' name='AVAudioSessionCategoryAudioProcessing' const='true' declared_type='NSString*'/>
<constant type='@' name='AVAudioSessionCategoryPlayAndRecord' const='true' declared_type='NSString*'/>
<constant type='@' name='AVAudioSessionCategoryPlayback' const='true' declared_type='NSString*'/>
<constant type='@' name='AVAudioSessionCategoryRecord' const='true' declared_type='NSString*'/>
<constant type='@' name='AVAudioSessionCategorySoloAmbient' const='true' declared_type='NSString*'/>
<constant type='@' name='kCDN_AsynchLoadComplete' const='true' declared_type='NSString*'/>
<constant type='@' name='kCDN_AudioManagerInitialised' const='true' declared_type='NSString*'/>
<constant type='@' name='kCDN_BadAlContext' const='true' declared_type='NSString*'/>
<constant type='i' name='kCDNoBuffer' const='true' declared_type='int'/>
<constant type='f' name='kCD_GainDefault' const='true' declared_type='float'/>
<constant type='f' name='kCD_PanDefault' const='true' declared_type='float'/>
<constant type='f' name='kCD_PanFullLeft' const='true' declared_type='float'/>
<constant type='f' name='kCD_PanFullRight' const='true' declared_type='float'/>
<constant type='f' name='kCD_PitchDefault' const='true' declared_type='float'/>
<constant type='f' name='kCD_PitchHigherOneOctave' const='true' declared_type='float'/>
<constant type='f' name='kCD_PitchLowerOneOctave' const='true' declared_type='float'/>
<string_constant name='COCOSDENSHION_VERSION' value='Aphex.rc'/>
<enum name='AVAudioSessionInterruptionFlags_ShouldResume' value='1'/>
<enum name='AVAudioSessionSetActiveFlags_NotifyOthersOnDeactivation' value='1'/>
<enum name='CD_BS_EMPTY' value='0'/>
<enum name='CD_BS_FAILED' value='2'/>
<enum name='CD_BS_LOADED' value='1'/>
<enum name='CD_BUFFERS_INCREMENT' value='16'/>
<enum name='CD_BUFFERS_START' value='64'/>
<enum name='CD_IGNORE_AUDIO_SESSION' value='200211438'/>
<enum name='CD_MUTE' value='267312043'/>
<enum name='CD_NO_SOURCE' value='267313068'/>
<enum name='CD_SAMPLE_RATE_BASIC' value='8000'/>
<enum name='CD_SAMPLE_RATE_DEFAULT' value='44100'/>
<enum name='CD_SAMPLE_RATE_HIGH' value='44100'/>
<enum name='CD_SAMPLE_RATE_LOW' value='16000'/>
<enum name='CD_SAMPLE_RATE_MID' value='22050'/>
<enum name='CD_SOURCE_LIMIT' value='32'/>
<enum name='kAMM_FxOnly' value='0'/>
<enum name='kAMM_FxPlusMusic' value='1'/>
<enum name='kAMM_FxPlusMusicIfNoOtherAudio' value='2'/>
<enum name='kAMM_MediaPlayback' value='3'/>
<enum name='kAMM_PlayAndRecord' value='4'/>
<enum name='kAMRBDoNothing' value='0'/>
<enum name='kAMRBStop' value='2'/>
<enum name='kAMRBStopPlay' value='1'/>
<enum name='kAMStateInitialised' value='2'/>
<enum name='kAMStateInitialising' value='1'/>
<enum name='kAMStateUninitialised' value='0'/>
<enum name='kASC_Left' value='0'/>
<enum name='kASC_Right' value='1'/>
<enum name='kAudioSessionProperty_AudioRoute' value='1'/>
<enum name='kAudioSessionProperty_OtherAudioIsPlaying' value='0'/>
<enum name='kIT_Exponential' value='2'/>
<enum name='kIT_Linear' value='0'/>
<enum name='kIT_SCurve' value='1'/>
<enum name='kLAS_Init' value='0'/>
<enum name='kLAS_Loaded' value='1'/>
<enum name='kLAS_Paused' value='3'/>
<enum name='kLAS_Playing' value='2'/>
<enum name='kLAS_Stopped' value='4'/>
<function name='AudioSessionGetProperty'>
<arg type='L' name='inID' declared_type='UInt32'/>
<arg type='^I' name='ioDataSize' declared_type='UInt32*'/>
<arg type='^v' name='outData' declared_type='void*'/>
<retval type='l' declared_type='OSStatus'/>
</function>
<function name='CDGetOpenALAudioData'>
<arg type='^{__CFURL=}' name='inFileURL' declared_type='CFURLRef'/>
<arg type='^i' name='outDataSize' declared_type='ALsizei*'/>
<arg type='^i' name='outDataFormat' declared_type='ALenum*'/>
<arg type='^i' name='outSampleRate' declared_type='ALsizei*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='CDloadCafAudioData'>
<arg type='^{__CFURL=}' name='inFileURL' declared_type='CFURLRef'/>
<arg type='^i' name='outDataSize' declared_type='ALsizei*'/>
<arg type='^i' name='outDataFormat' declared_type='ALenum*'/>
<arg type='^i' name='outSampleRate' declared_type='ALsizei*'/>
<retval type='^v' declared_type='void*'/>
</function>
<function name='CDloadWaveAudioData'>
<arg type='^{__CFURL=}' name='inFileURL' declared_type='CFURLRef'/>
<arg type='^i' name='outDataSize' declared_type='ALsizei*'/>
<arg type='^i' name='outDataFormat' declared_type='ALenum*'/>
<arg type='^i' name='outSampleRate' declared_type='ALsizei*'/>
<retval type='^v' declared_type='void*'/>
</function>
<class name='AVAudioPlayer'>
<method selector='averagePowerForChannel:'>
<arg type='I' name='channelNumber' index='0' declared_type='NSUInteger'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='currentTime'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='data'>
<retval type='@' declared_type='NSData*'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='deviceCurrentTime'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='duration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg type='@' name='theUrl' index='0' declared_type='NSURL*'/>
<arg type='^@' name='outError' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithData:error:'>
<arg type='@' name='theData' index='0' declared_type='NSData*'/>
<arg type='^@' name='outError' index='1' declared_type='NSError**'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isMeteringEnabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='numberOfChannels'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='numberOfLoops'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='pan'>
<retval type='f' declared_type='float'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='peakPowerForChannel:'>
<arg type='I' name='channelNumber' index='0' declared_type='NSUInteger'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='play'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='playAtTime:'>
<arg type='d' name='time' index='0' declared_type='NSTimeInterval'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='prepareToPlay'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setCurrentTime:'>
<arg type='d' name='currentTime' index='0' declared_type='NSTimeInterval'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMeteringEnabled:'>
<arg type='B' name='meteringEnabled' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfLoops:'>
<arg type='i' name='numberOfLoops' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPan:'>
<arg type='f' name='pan' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVolume:'>
<arg type='f' name='volume' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='updateMeters'>
<retval type='v' declared_type='void'/>
</method>
<method selector='url'>
<retval type='@' declared_type='NSURL*'/>
</method>
<method selector='volume'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='AVAudioSession'>
<method selector='category'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='currentHardwareInputNumberOfChannels'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='currentHardwareOutputNumberOfChannels'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='currentHardwareSampleRate'>
<retval type='d' declared_type='double'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='inputIsAvailable'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='preferredHardwareSampleRate'>
<retval type='d' declared_type='double'/>
</method>
<method selector='preferredIOBufferDuration'>
<retval type='d' declared_type='NSTimeInterval'/>
</method>
<method selector='setActive:error:'>
<arg type='B' name='beActive' index='0' declared_type='BOOL'/>
<arg type='^@' name='outError' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setActive:withFlags:error:'>
<arg type='B' name='beActive' index='0' declared_type='BOOL'/>
<arg type='i' name='flags' index='1' declared_type='NSInteger'/>
<arg type='^@' name='outError' index='2' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setCategory:error:'>
<arg type='@' name='theCategory' index='0' declared_type='NSString*'/>
<arg type='^@' name='outError' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreferredHardwareSampleRate:error:'>
<arg type='d' name='sampleRate' index='0' declared_type='double'/>
<arg type='^@' name='outError' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setPreferredIOBufferDuration:error:'>
<arg type='d' name='duration' index='0' declared_type='NSTimeInterval'/>
<arg type='^@' name='outError' index='1' declared_type='NSError**'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CDAsynchBufferLoader'>
<method selector='init:soundEngine:'>
<arg type='@' name='loadRequests' index='0' declared_type='NSArray*'/>
<arg type='@' name='theSoundEngine' index='1' declared_type='CDSoundEngine*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='CDAudioInterruptTargetGroup'>
<method selector='addAudioInterruptTarget:'>
<arg type='@' name='interruptibleTarget' index='0' declared_type='NSObject*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CDAudioManager'>
<method selector='applicationDidBecomeActive'>
<retval type='v' declared_type='void'/>
</method>
<method selector='applicationWillResignActive'>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioSessionInterrupted'>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioSessionResumed'>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioSourceForChannel:'>
<arg type='i' name='channel' index='0' declared_type='tAudioSourceChannel'/>
<retval type='@' declared_type='CDLongAudioSource*'/>
</method>
<method selector='audioSourceLoad:channel:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<arg type='i' name='channel' index='1' declared_type='tAudioSourceChannel'/>
<retval type='@' declared_type='CDLongAudioSource*'/>
</method>
<method selector='backgroundMusic'>
<retval type='@' declared_type='CDLongAudioSource*'/>
</method>
<method class_method='true' selector='configure:'>
<arg type='i' name='mode' index='0' declared_type='tAudioManagerMode'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='init:'>
<arg type='i' name='mode' index='0' declared_type='tAudioManagerMode'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='initAsynchronously:'>
<arg type='i' name='mode' index='0' declared_type='tAudioManagerMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='isBackgroundMusicPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isDeviceMuted'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isOtherAudioPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='playBackgroundMusic:loop:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<arg type='B' name='loop' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preloadBackgroundMusic:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rewindBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundMusicCompletionListener:selector:'>
<arg type='@' name='listener' index='0' declared_type='id'/>
<arg type=':' name='selector' index='1' declared_type='SEL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMode:'>
<arg type='i' name='mode' index='0' declared_type='tAudioManagerMode'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setResignBehavior:autoHandle:'>
<arg type='i' name='resignBehavior' index='0' declared_type='tAudioManagerResignBehavior'/>
<arg type='B' name='autoHandle' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval type='@' declared_type='CDAudioManager*'/>
</method>
<method class_method='true' selector='sharedManagerState'>
<retval type='i' declared_type='tAudioManagerState'/>
</method>
<method selector='soundEngine'>
<retval type='@' declared_type='CDSoundEngine*'/>
</method>
<method selector='stopBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='willPlayBackgroundMusic'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CDBufferLoadRequest'>
<method selector='filePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='init:filePath:'>
<arg type='i' name='theSoundId' index='0' declared_type='int'/>
<arg type='@' name='theFilePath' index='1' const='true' declared_type='NSString*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='soundId'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CDBufferManager'>
<method selector='bufferForFile:create:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<arg type='B' name='create' index='1' declared_type='BOOL'/>
<retval type='i' declared_type='int'/>
</method>
<method selector='initWithEngine:'>
<arg type='@' name='theSoundEngine' index='0' declared_type='CDSoundEngine*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='releaseBufferForFile:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='CDFloatInterpolator'>
<method selector='end'>
<retval type='f' declared_type='float'/>
</method>
<method selector='init:startVal:endVal:'>
<arg type='i' name='type' index='0' declared_type='tCDInterpolationType'/>
<arg type='f' name='startVal' index='1' declared_type='float'/>
<arg type='f' name='endVal' index='2' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interpolate:'>
<arg type='f' name='t' index='0' declared_type='float'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='interpolationType'>
<retval type='i' declared_type='tCDInterpolationType'/>
</method>
<method selector='setEnd:'>
<arg type='f' name='end' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterpolationType:'>
<arg type='i' name='interpolationType' index='0' declared_type='tCDInterpolationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStart:'>
<arg type='f' name='start' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='start'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CDLongAudioSource'>
<method selector='audioSourceFilePath'>
<retval type='@' declared_type='NSString*'/>
</method>
<method selector='audioSourcePlayer'>
<retval type='@' declared_type='AVAudioPlayer*'/>
</method>
<method selector='backgroundMusic'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='delegate'>
<retval type='@' declared_type='id'/>
</method>
<method selector='isPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='load:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='numberOfLoops'>
<retval type='i' declared_type='NSInteger'/>
</method>
<method selector='pause'>
<retval type='v' declared_type='void'/>
</method>
<method selector='play'>
<retval type='v' declared_type='void'/>
</method>
<method selector='resume'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rewind'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundMusic:'>
<arg type='B' name='backgroundMusic' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDelegate:'>
<arg type='@' name='delegate' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setNumberOfLoops:'>
<arg type='i' name='numberOfLoops' index='0' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setVolume:'>
<arg type='f' name='volume' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='v' declared_type='void'/>
</method>
<method selector='volume'>
<retval type='f' declared_type='float'/>
</method>
</class>
<class name='CDPropertyModifier'>
<method selector='_allowableType'>
<retval type='#' declared_type='Class'/>
</method>
<method selector='_getTargetProperty'>
<retval type='f' declared_type='float'/>
</method>
<method selector='_setTargetProperty:'>
<arg type='f' name='newVal' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='_stopTarget'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='init:interpolationType:startVal:endVal:'>
<arg type='@' name='theTarget' index='0' declared_type='id'/>
<arg type='i' name='type' index='1' declared_type='tCDInterpolationType'/>
<arg type='f' name='startVal' index='2' declared_type='float'/>
<arg type='f' name='endVal' index='3' declared_type='float'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='interpolationType'>
<retval type='i' declared_type='tCDInterpolationType'/>
</method>
<method selector='modify:'>
<arg type='f' name='t' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndValue:'>
<arg type='f' name='endValue' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setInterpolationType:'>
<arg type='i' name='interpolationType' index='0' declared_type='tCDInterpolationType'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStartValue:'>
<arg type='f' name='startValue' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setStopTargetWhenComplete:'>
<arg type='B' name='stopTargetWhenComplete' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='startValue'>
<retval type='f' declared_type='float'/>
</method>
<method selector='stopTargetWhenComplete'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CDSoundEngine'>
<method selector='_soundSourcePreRelease:'>
<arg type='@' name='soundSource' index='0' declared_type='CDSoundSource*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='asynchLoadProgress'>
<retval type='f' declared_type='float'/>
</method>
<method selector='bufferDurationInSeconds:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<retval type='f' declared_type='float'/>
</method>
<method selector='bufferFrequencyInHertz:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<retval type='i' declared_type='ALsizei'/>
</method>
<method selector='bufferSizeInBytes:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<retval type='i' declared_type='ALsizei'/>
</method>
<method selector='defineSourceGroups:'>
<arg type='@' name='sourceGroupDefinitions' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='defineSourceGroups:total:'>
<arg type='^i' name='sourceGroupDefinitions' index='0' declared_type='int*'/>
<arg type='I' name='total' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='functioning'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='getGainWorks'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='init'>
<retval type='@' declared_type='id'/>
</method>
<method selector='lastErrorCode'>
<retval type='i' declared_type='ALenum'/>
</method>
<method selector='loadBuffer:filePath:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<arg type='@' name='filePath' index='1' declared_type='NSString*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadBufferFromData:soundData:format:size:freq:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<arg type='^v' name='soundData' index='1' declared_type='ALvoid*'/>
<arg type='i' name='format' index='2' declared_type='ALenum'/>
<arg type='i' name='size' index='3' declared_type='ALsizei'/>
<arg type='i' name='freq' index='4' declared_type='ALsizei'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='loadBuffersAsynchronously:'>
<arg type='@' name='loadRequests' index='0' declared_type='NSArray*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='masterGain'>
<retval type='f' declared_type='ALfloat'/>
</method>
<method selector='openALContext'>
<retval type='^{ALCcontext_struct=}' declared_type='ALCcontext*'/>
</method>
<method selector='playSound:sourceGroupId:pitch:pan:gain:loop:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<arg type='i' name='sourceGroupId' index='1' declared_type='int'/>
<arg type='f' name='pitch' index='2' declared_type='float'/>
<arg type='f' name='pan' index='3' declared_type='float'/>
<arg type='f' name='gain' index='4' declared_type='float'/>
<arg type='B' name='loop' index='5' declared_type='BOOL'/>
<retval type='I' declared_type='ALuint'/>
</method>
<method selector='setAsynchLoadProgress:'>
<arg type='f' name='asynchLoadProgress' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMasterGain:'>
<arg type='f' name='masterGain' index='0' declared_type='ALfloat'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='setMixerSampleRate:'>
<arg type='f' name='sampleRate' index='0' declared_type='Float32'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceGroupEnabled:enabled:'>
<arg type='i' name='sourceGroupId' index='0' declared_type='int'/>
<arg type='B' name='enabled' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSourceGroupNonInterruptible:isNonInterruptible:'>
<arg type='i' name='sourceGroupId' index='0' declared_type='int'/>
<arg type='B' name='isNonInterruptible' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundSourceForSound:sourceGroupId:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<arg type='i' name='sourceGroupId' index='1' declared_type='int'/>
<retval type='@' declared_type='CDSoundSource*'/>
</method>
<method selector='sourceGroupEnabled:'>
<arg type='i' name='sourceGroupId' index='0' declared_type='int'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='sourceGroupTotal'>
<retval type='I' declared_type='NSUInteger'/>
</method>
<method selector='sourceTotal'>
<retval type='i' declared_type='int'/>
</method>
<method selector='stopAllSounds'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopSound:'>
<arg type='I' name='sourceId' index='0' declared_type='ALuint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopSourceGroup:'>
<arg type='i' name='sourceGroupId' index='0' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unloadBuffer:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='CDSoundSource'>
<method selector='durationInSeconds'>
<retval type='f' declared_type='float'/>
</method>
<method selector='gain'>
<retval type='f' declared_type='float'/>
</method>
<method selector='init:sourceIndex:soundEngine:'>
<arg type='I' name='theSourceId' index='0' declared_type='ALuint'/>
<arg type='i' name='index' index='1' declared_type='int'/>
<arg type='@' name='engine' index='2' declared_type='CDSoundEngine*'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='lastError'>
<retval type='i' declared_type='ALenum'/>
</method>
<method selector='looping'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pan'>
<retval type='f' declared_type='float'/>
</method>
<method selector='pitch'>
<retval type='f' declared_type='float'/>
</method>
<method selector='setGain:'>
<arg type='f' name='gain' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLooping:'>
<arg type='B' name='looping' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPan:'>
<arg type='f' name='pan' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPitch:'>
<arg type='f' name='pitch' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSoundId:'>
<arg type='i' name='soundId' index='0' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='soundId'>
<retval type='i' declared_type='int'/>
</method>
</class>
<class name='CDUtilities'>
<method class_method='true' selector='fullPathFromRelativePath:'>
<arg type='@' name='relPath' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='NSString*'/>
</method>
</class>
<class name='CDXPropertyModifierAction'>
<method class_method='true' selector='actionWithDuration:modifier:'>
<arg type='@' name='t' index='0' declared_type='id'/>
<arg type='@' name='aModifier' index='1' declared_type='CDPropertyModifier*'/>
<retval type='@' declared_type='id'/>
</method>
<method class_method='true' selector='fadeBackgroundMusic:finalVolume:curveType:shouldStop:'>
<arg type='@' name='t' index='0' declared_type='id'/>
<arg type='f' name='endVol' index='1' declared_type='float'/>
<arg type='i' name='curve' index='2' declared_type='tCDInterpolationType'/>
<arg type='B' name='stop' index='3' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='fadeSoundEffect:finalVolume:curveType:shouldStop:effect:'>
<arg type='@' name='t' index='0' declared_type='id'/>
<arg type='f' name='endVol' index='1' declared_type='float'/>
<arg type='i' name='curve' index='2' declared_type='tCDInterpolationType'/>
<arg type='B' name='stop' index='3' declared_type='BOOL'/>
<arg type='@' name='effect' index='4' declared_type='CDSoundSource*'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='fadeSoundEffects:finalVolume:curveType:shouldStop:'>
<arg type='@' name='t' index='0' declared_type='id'/>
<arg type='f' name='endVol' index='1' declared_type='float'/>
<arg type='i' name='curve' index='2' declared_type='tCDInterpolationType'/>
<arg type='B' name='stop' index='3' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithDuration:modifier:'>
<arg type='@' name='t' index='0' declared_type='id'/>
<arg type='@' name='aModifier' index='1' declared_type='CDPropertyModifier*'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='NSObject'>
<method selector='audioPlayerBeginInterruption:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<arg type='@' name='error' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<arg type='B' name='flag' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioPlayerEndInterruption:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<arg type='I' name='flags' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='beginInterruption'>
<retval type='v' declared_type='void'/>
</method>
<method selector='cdAudioSourceDidFinishPlaying:'>
<arg type='@' name='audioSource' index='0' declared_type='CDLongAudioSource*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='cdAudioSourceFileDidChange:'>
<arg type='@' name='audioSource' index='0' declared_type='CDLongAudioSource*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='endInterruption'>
<retval type='v' declared_type='void'/>
</method>
<method selector='endInterruptionWithFlags:'>
<arg type='I' name='flags' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='inputIsAvailableChanged:'>
<arg type='B' name='isInputAvailable' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='mute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pause'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='play'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='rewind'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setEnabled:'>
<arg type='B' name='enabledValue' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMute:'>
<arg type='B' name='muteValue' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stop'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<class name='SimpleAudioEngine'>
<method selector='backgroundMusicVolume'>
<retval type='f' declared_type='float'/>
</method>
<method selector='effectsVolume'>
<retval type='f' declared_type='float'/>
</method>
<method class_method='true' selector='end'>
<retval type='v' declared_type='void'/>
</method>
<method selector='isBackgroundMusicPlaying'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='pauseBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='playBackgroundMusic:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='playBackgroundMusic:loop:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<arg type='B' name='loop' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='playEffect:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='I' declared_type='ALuint'/>
</method>
<method selector='playEffect:pitch:pan:gain:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<arg type='f' name='pitch' index='1' declared_type='Float32'/>
<arg type='f' name='pan' index='2' declared_type='Float32'/>
<arg type='f' name='gain' index='3' declared_type='Float32'/>
<retval type='I' declared_type='ALuint'/>
</method>
<method selector='preloadBackgroundMusic:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='preloadEffect:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='resumeBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='rewindBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBackgroundMusicVolume:'>
<arg type='f' name='backgroundMusicVolume' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEffectsVolume:'>
<arg type='f' name='effectsVolume' index='0' declared_type='float'/>
<retval type='v' declared_type='void'/>
</method>
<method class_method='true' selector='sharedEngine'>
<retval type='@' declared_type='SimpleAudioEngine*'/>
</method>
<method selector='soundSourceForFile:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='@' declared_type='CDSoundSource*'/>
</method>
<method selector='stopBackgroundMusic'>
<retval type='v' declared_type='void'/>
</method>
<method selector='stopEffect:'>
<arg type='I' name='soundId' index='0' declared_type='ALuint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='unloadEffect:'>
<arg type='@' name='filePath' index='0' declared_type='NSString*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='willPlayBackgroundMusic'>
<retval type='B' declared_type='BOOL'/>
</method>
</class>
<informal_protocol name='AVAudioPlayerDelegate'>
<method type='v12@0:4@8' selector='audioPlayerBeginInterruption:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8@12' selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<arg type='@' name='error' index='1' declared_type='NSError*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8B12' selector='audioPlayerDidFinishPlaying:successfully:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<arg type='B' name='flag' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='audioPlayerEndInterruption:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v16@0:4@8I12' selector='audioPlayerEndInterruption:withFlags:'>
<arg type='@' name='player' index='0' declared_type='AVAudioPlayer*'/>
<arg type='I' name='flags' index='1' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioSessionDelegate'>
<method type='v8@0:4' selector='beginInterruption'>
<retval type='v' declared_type='void'/>
</method>
<method type='v8@0:4' selector='endInterruption'>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4I8' selector='endInterruptionWithFlags:'>
<arg type='I' name='flags' index='0' declared_type='NSUInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='inputIsAvailableChanged:'>
<arg type='B' name='isInputAvailable' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CDAudioInterruptProtocol'>
<method type='B8@0:4' selector='enabled'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B8@0:4' selector='mute'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='v12@0:4B8' selector='setEnabled:'>
<arg type='B' name='enabledValue' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4B8' selector='setMute:'>
<arg type='B' name='muteValue' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
<informal_protocol name='CDAudioTransportProtocol'>
<method type='B8@0:4' selector='pause'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B8@0:4' selector='play'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B8@0:4' selector='rewind'>
<retval type='B' declared_type='BOOL'/>
</method>
<method type='B8@0:4' selector='stop'>
<retval type='B' declared_type='BOOL'/>
</method>
</informal_protocol>
<informal_protocol name='CDLongAudioSourceDelegate'>
<method type='v12@0:4@8' selector='cdAudioSourceDidFinishPlaying:'>
<arg type='@' name='audioSource' index='0' declared_type='CDLongAudioSource*'/>
<retval type='v' declared_type='void'/>
</method>
<method type='v12@0:4@8' selector='cdAudioSourceFileDidChange:'>
<arg type='@' name='audioSource' index='0' declared_type='CDLongAudioSource*'/>
<retval type='v' declared_type='void'/>
</method>
</informal_protocol>
</signatures>
