<?xml version='1.0'?>
<signatures version='1.0'>
<struct type='{_bufferInfo=&quot;bufferId&quot;I&quot;bufferState&quot;i&quot;bufferData&quot;^v&quot;format&quot;i&quot;sizeInBytes&quot;i&quot;frequencyInHertz&quot;i}' name='bufferInfo'>
<field declared_type='ALuint' type='I' name='bufferId'/>
<field declared_type='int' type='i' name='bufferState'/>
<field declared_type='void*' type='^v' name='bufferData'/>
<field declared_type='ALenum' type='i' name='format'/>
<field declared_type='ALsizei' type='i' name='sizeInBytes'/>
<field declared_type='ALsizei' type='i' name='frequencyInHertz'/>
</struct>
<struct type='{_sourceGroup=&quot;startIndex&quot;i&quot;currentIndex&quot;i&quot;totalSources&quot;i&quot;enabled&quot;B&quot;nonInterruptible&quot;B&quot;sourceStatuses&quot;^i}' name='sourceGroup'>
<field declared_type='int' type='i' name='startIndex'/>
<field declared_type='int' type='i' name='currentIndex'/>
<field declared_type='int' type='i' name='totalSources'/>
<field declared_type='_Bool' type='B' name='enabled'/>
<field declared_type='_Bool' type='B' name='nonInterruptible'/>
<field declared_type='int*' type='^i' name='sourceStatuses'/>
</struct>
<struct type='{_sourceInfo=&quot;usable&quot;B&quot;sourceId&quot;I&quot;attachedBufferId&quot;I}' name='sourceInfo'>
<field declared_type='_Bool' type='B' name='usable'/>
<field declared_type='ALuint' type='I' name='sourceId'/>
<field declared_type='ALuint' type='I' name='attachedBufferId'/>
</struct>
<constant const='true' declared_type='NSString*' type='@' name='AVAudioSessionCategoryAmbient'/>
<constant const='true' declared_type='NSString*' type='@' name='AVAudioSessionCategoryAudioProcessing'/>
<constant const='true' declared_type='NSString*' type='@' name='AVAudioSessionCategoryPlayAndRecord'/>
<constant const='true' declared_type='NSString*' type='@' name='AVAudioSessionCategoryPlayback'/>
<constant const='true' declared_type='NSString*' type='@' name='AVAudioSessionCategoryRecord'/>
<constant const='true' declared_type='NSString*' type='@' name='AVAudioSessionCategorySoloAmbient'/>
<constant const='true' declared_type='NSString*' type='@' name='kCDN_AsynchLoadComplete'/>
<constant const='true' declared_type='NSString*' type='@' name='kCDN_AudioManagerInitialised'/>
<constant const='true' declared_type='NSString*' type='@' name='kCDN_BadAlContext'/>
<constant const='true' declared_type='int' type='i' name='kCDNoBuffer'/>
<constant const='true' declared_type='float' type='f' name='kCD_GainDefault'/>
<constant const='true' declared_type='float' type='f' name='kCD_PanDefault'/>
<constant const='true' declared_type='float' type='f' name='kCD_PanFullLeft'/>
<constant const='true' declared_type='float' type='f' name='kCD_PanFullRight'/>
<constant const='true' declared_type='float' type='f' name='kCD_PitchDefault'/>
<constant const='true' declared_type='float' type='f' name='kCD_PitchHigherOneOctave'/>
<constant const='true' declared_type='float' type='f' name='kCD_PitchLowerOneOctave'/>
<string_constant value='Aphex.rc' name='COCOSDENSHION_VERSION'/>
<enum value='1' name='AVAudioSessionInterruptionFlags_ShouldResume'/>
<enum value='1' name='AVAudioSessionSetActiveFlags_NotifyOthersOnDeactivation'/>
<enum value='0' name='CD_BS_EMPTY'/>
<enum value='2' name='CD_BS_FAILED'/>
<enum value='1' name='CD_BS_LOADED'/>
<enum value='16' name='CD_BUFFERS_INCREMENT'/>
<enum value='64' name='CD_BUFFERS_START'/>
<enum value='200211438' name='CD_IGNORE_AUDIO_SESSION'/>
<enum value='267312043' name='CD_MUTE'/>
<enum value='267313068' name='CD_NO_SOURCE'/>
<enum value='8000' name='CD_SAMPLE_RATE_BASIC'/>
<enum value='44100' name='CD_SAMPLE_RATE_DEFAULT'/>
<enum value='44100' name='CD_SAMPLE_RATE_HIGH'/>
<enum value='16000' name='CD_SAMPLE_RATE_LOW'/>
<enum value='22050' name='CD_SAMPLE_RATE_MID'/>
<enum value='32' name='CD_SOURCE_LIMIT'/>
<enum value='0' name='kAMM_FxOnly'/>
<enum value='1' name='kAMM_FxPlusMusic'/>
<enum value='2' name='kAMM_FxPlusMusicIfNoOtherAudio'/>
<enum value='3' name='kAMM_MediaPlayback'/>
<enum value='4' name='kAMM_PlayAndRecord'/>
<enum value='0' name='kAMRBDoNothing'/>
<enum value='2' name='kAMRBStop'/>
<enum value='1' name='kAMRBStopPlay'/>
<enum value='2' name='kAMStateInitialised'/>
<enum value='1' name='kAMStateInitialising'/>
<enum value='0' name='kAMStateUninitialised'/>
<enum value='0' name='kASC_Left'/>
<enum value='1' name='kASC_Right'/>
<enum value='1' name='kAudioSessionProperty_AudioRoute'/>
<enum value='0' name='kAudioSessionProperty_OtherAudioIsPlaying'/>
<enum value='2' name='kIT_Exponential'/>
<enum value='0' name='kIT_Linear'/>
<enum value='1' name='kIT_SCurve'/>
<enum value='0' name='kLAS_Init'/>
<enum value='1' name='kLAS_Loaded'/>
<enum value='3' name='kLAS_Paused'/>
<enum value='2' name='kLAS_Playing'/>
<enum value='4' name='kLAS_Stopped'/>
<function name='AudioSessionGetProperty'>
<arg declared_type='UInt32' type='L' type64='I' name='inID'/>
<arg declared_type='UInt32*' type='^I' name='ioDataSize'/>
<arg declared_type='void*' type='^v' name='outData'/>
<retval declared_type='OSStatus' type='l' type64='i'/>
</function>
<function name='CDGetOpenALAudioData'>
<arg declared_type='CFURLRef' type='^{__CFURL=}' name='inFileURL'/>
<arg declared_type='ALsizei*' type='^i' name='outDataSize'/>
<arg declared_type='ALenum*' type='^i' name='outDataFormat'/>
<arg declared_type='ALsizei*' type='^i' name='outSampleRate'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='CDloadCafAudioData'>
<arg declared_type='CFURLRef' type='^{__CFURL=}' name='inFileURL'/>
<arg declared_type='ALsizei*' type='^i' name='outDataSize'/>
<arg declared_type='ALenum*' type='^i' name='outDataFormat'/>
<arg declared_type='ALsizei*' type='^i' name='outSampleRate'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='CDloadWaveAudioData'>
<arg declared_type='CFURLRef' type='^{__CFURL=}' name='inFileURL'/>
<arg declared_type='ALsizei*' type='^i' name='outDataSize'/>
<arg declared_type='ALenum*' type='^i' name='outDataFormat'/>
<arg declared_type='ALsizei*' type='^i' name='outSampleRate'/>
<retval declared_type='void*' type='^v'/>
</function>
<class name='AVAudioPlayer'>
<method selector='averagePowerForChannel:'>
<arg index='0' declared_type='NSUInteger' type='I' type64='Q' name='channelNumber'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='currentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='deviceCurrentTime'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='duration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='initWithContentsOfURL:error:'>
<arg index='0' declared_type='NSURL*' type='@' name='theUrl'/>
<arg index='1' declared_type='NSError**' type='^@' name='outError'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithData:error:'>
<arg index='0' declared_type='NSData*' type='@' name='theData'/>
<arg index='1' declared_type='NSError**' type='^@' name='outError'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isMeteringEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='numberOfChannels'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pan'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='peakPowerForChannel:'>
<arg index='0' declared_type='NSUInteger' type='I' type64='Q' name='channelNumber'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='play'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='playAtTime:'>
<arg index='0' declared_type='NSTimeInterval' type='d' name='time'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='prepareToPlay'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCurrentTime:'>
<arg index='0' declared_type='NSTimeInterval' type='d' name='currentTime'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMeteringEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='meteringEnabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg index='0' declared_type='NSInteger' type='i' type64='q' name='numberOfLoops'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPan:'>
<arg index='0' declared_type='float' type='f' name='pan'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg index='0' declared_type='float' type='f' name='volume'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateMeters'>
<retval declared_type='void' type='v'/>
</method>
<method selector='url'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='AVAudioSession'>
<method selector='category'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currentHardwareInputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='currentHardwareOutputNumberOfChannels'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='currentHardwareSampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputIsAvailable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredHardwareSampleRate'>
<retval declared_type='double' type='d'/>
</method>
<method selector='preferredIOBufferDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setActive:error:'>
<arg index='0' declared_type='BOOL' type='B' name='beActive'/>
<arg index='1' declared_type='NSError**' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActive:withFlags:error:'>
<arg index='0' declared_type='BOOL' type='B' name='beActive'/>
<arg index='1' declared_type='NSInteger' type='i' type64='q' name='flags'/>
<arg index='2' declared_type='NSError**' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCategory:error:'>
<arg index='0' declared_type='NSString*' type='@' name='theCategory'/>
<arg index='1' declared_type='NSError**' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredHardwareSampleRate:error:'>
<arg index='0' declared_type='double' type='d' name='sampleRate'/>
<arg index='1' declared_type='NSError**' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPreferredIOBufferDuration:error:'>
<arg index='0' declared_type='NSTimeInterval' type='d' name='duration'/>
<arg index='1' declared_type='NSError**' type='^@' name='outError'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sharedInstance'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CDAsynchBufferLoader'>
<method selector='init:soundEngine:'>
<arg index='0' declared_type='NSArray*' type='@' name='loadRequests'/>
<arg index='1' declared_type='CDSoundEngine*' type='@' name='theSoundEngine'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='CDAudioInterruptTargetGroup'>
<method selector='addAudioInterruptTarget:'>
<arg index='0' declared_type='NSObject*' type='@' name='interruptibleTarget'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CDAudioManager'>
<method selector='applicationDidBecomeActive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='applicationWillResignActive'>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioSessionInterrupted'>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioSessionResumed'>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioSourceForChannel:'>
<arg index='0' declared_type='tAudioSourceChannel' type='i' name='channel'/>
<retval declared_type='CDLongAudioSource*' type='@'/>
</method>
<method selector='audioSourceLoad:channel:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<arg index='1' declared_type='tAudioSourceChannel' type='i' name='channel'/>
<retval declared_type='CDLongAudioSource*' type='@'/>
</method>
<method selector='backgroundMusic'>
<retval declared_type='CDLongAudioSource*' type='@'/>
</method>
<method class_method='true' selector='configure:'>
<arg index='0' declared_type='tAudioManagerMode' type='i' name='mode'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='init:'>
<arg index='0' declared_type='tAudioManagerMode' type='i' name='mode'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='initAsynchronously:'>
<arg index='0' declared_type='tAudioManagerMode' type='i' name='mode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='isBackgroundMusicPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDeviceMuted'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOtherAudioPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='playBackgroundMusic:loop:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<arg index='1' declared_type='BOOL' type='B' name='loop'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preloadBackgroundMusic:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rewindBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundMusicCompletionListener:selector:'>
<arg index='0' declared_type='id' type='@' name='listener'/>
<arg index='1' declared_type='SEL' type=':' name='selector'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg index='0' declared_type='tAudioManagerMode' type='i' name='mode'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResignBehavior:autoHandle:'>
<arg index='0' declared_type='tAudioManagerResignBehavior' type='i' name='resignBehavior'/>
<arg index='1' declared_type='BOOL' type='B' name='autoHandle'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='CDAudioManager*' type='@'/>
</method>
<method class_method='true' selector='sharedManagerState'>
<retval declared_type='tAudioManagerState' type='i'/>
</method>
<method selector='soundEngine'>
<retval declared_type='CDSoundEngine*' type='@'/>
</method>
<method selector='stopBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPlayBackgroundMusic'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CDBufferLoadRequest'>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='init:filePath:'>
<arg index='0' declared_type='int' type='i' name='theSoundId'/>
<arg const='true' index='1' declared_type='NSString*' type='@' name='theFilePath'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='soundId'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='CDBufferManager'>
<method selector='bufferForFile:create:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<arg index='1' declared_type='BOOL' type='B' name='create'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='initWithEngine:'>
<arg index='0' declared_type='CDSoundEngine*' type='@' name='theSoundEngine'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='releaseBufferForFile:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='CDFloatInterpolator'>
<method selector='end'>
<retval declared_type='float' type='f'/>
</method>
<method selector='init:startVal:endVal:'>
<arg index='0' declared_type='tCDInterpolationType' type='i' name='type'/>
<arg index='1' declared_type='float' type='f' name='startVal'/>
<arg index='2' declared_type='float' type='f' name='endVal'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='interpolate:'>
<arg index='0' declared_type='float' type='f' name='t'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='interpolationType'>
<retval declared_type='tCDInterpolationType' type='i'/>
</method>
<method selector='setEnd:'>
<arg index='0' declared_type='float' type='f' name='end'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterpolationType:'>
<arg index='0' declared_type='tCDInterpolationType' type='i' name='interpolationType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStart:'>
<arg index='0' declared_type='float' type='f' name='start'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='start'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CDLongAudioSource'>
<method selector='audioSourceFilePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='audioSourcePlayer'>
<retval declared_type='AVAudioPlayer*' type='@'/>
</method>
<method selector='backgroundMusic'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='load:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='numberOfLoops'>
<retval declared_type='NSInteger' type='i' type64='q'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='play'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rewind'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundMusic:'>
<arg index='0' declared_type='BOOL' type='B' name='backgroundMusic'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg index='0' declared_type='id' type='@' name='delegate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNumberOfLoops:'>
<arg index='0' declared_type='NSInteger' type='i' type64='q' name='numberOfLoops'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVolume:'>
<arg index='0' declared_type='float' type='f' name='volume'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='volume'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='CDPropertyModifier'>
<method selector='_allowableType'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='_getTargetProperty'>
<retval declared_type='float' type='f'/>
</method>
<method selector='_setTargetProperty:'>
<arg index='0' declared_type='float' type='f' name='newVal'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_stopTarget'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='init:interpolationType:startVal:endVal:'>
<arg index='0' declared_type='id' type='@' name='theTarget'/>
<arg index='1' declared_type='tCDInterpolationType' type='i' name='type'/>
<arg index='2' declared_type='float' type='f' name='startVal'/>
<arg index='3' declared_type='float' type='f' name='endVal'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='interpolationType'>
<retval declared_type='tCDInterpolationType' type='i'/>
</method>
<method selector='modify:'>
<arg index='0' declared_type='float' type='f' name='t'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndValue:'>
<arg index='0' declared_type='float' type='f' name='endValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInterpolationType:'>
<arg index='0' declared_type='tCDInterpolationType' type='i' name='interpolationType'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartValue:'>
<arg index='0' declared_type='float' type='f' name='startValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStopTargetWhenComplete:'>
<arg index='0' declared_type='BOOL' type='B' name='stopTargetWhenComplete'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startValue'>
<retval declared_type='float' type='f'/>
</method>
<method selector='stopTargetWhenComplete'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CDSoundEngine'>
<method selector='_soundSourcePreRelease:'>
<arg index='0' declared_type='CDSoundSource*' type='@' name='soundSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='asynchLoadProgress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='bufferDurationInSeconds:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<retval declared_type='float' type='f'/>
</method>
<method selector='bufferFrequencyInHertz:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<retval declared_type='ALsizei' type='i'/>
</method>
<method selector='bufferSizeInBytes:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<retval declared_type='ALsizei' type='i'/>
</method>
<method selector='defineSourceGroups:'>
<arg index='0' declared_type='NSArray*' type='@' name='sourceGroupDefinitions'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='defineSourceGroups:total:'>
<arg index='0' declared_type='int*' type='^i' name='sourceGroupDefinitions'/>
<arg index='1' declared_type='NSUInteger' type='I' type64='Q' name='total'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='functioning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getGainWorks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='lastErrorCode'>
<retval declared_type='ALenum' type='i'/>
</method>
<method selector='loadBuffer:filePath:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<arg index='1' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadBufferFromData:soundData:format:size:freq:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<arg index='1' declared_type='ALvoid*' type='^v' name='soundData'/>
<arg index='2' declared_type='ALenum' type='i' name='format'/>
<arg index='3' declared_type='ALsizei' type='i' name='size'/>
<arg index='4' declared_type='ALsizei' type='i' name='freq'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='loadBuffersAsynchronously:'>
<arg index='0' declared_type='NSArray*' type='@' name='loadRequests'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='masterGain'>
<retval declared_type='ALfloat' type='f'/>
</method>
<method selector='openALContext'>
<retval declared_type='ALCcontext*' type='^{ALCcontext_struct=}'/>
</method>
<method selector='playSound:sourceGroupId:pitch:pan:gain:loop:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<arg index='1' declared_type='int' type='i' name='sourceGroupId'/>
<arg index='2' declared_type='float' type='f' name='pitch'/>
<arg index='3' declared_type='float' type='f' name='pan'/>
<arg index='4' declared_type='float' type='f' name='gain'/>
<arg index='5' declared_type='BOOL' type='B' name='loop'/>
<retval declared_type='ALuint' type='I'/>
</method>
<method selector='setAsynchLoadProgress:'>
<arg index='0' declared_type='float' type='f' name='asynchLoadProgress'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMasterGain:'>
<arg index='0' declared_type='ALfloat' type='f' name='masterGain'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setMixerSampleRate:'>
<arg index='0' declared_type='Float32' type='f' name='sampleRate'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceGroupEnabled:enabled:'>
<arg index='0' declared_type='int' type='i' name='sourceGroupId'/>
<arg index='1' declared_type='BOOL' type='B' name='enabled'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceGroupNonInterruptible:isNonInterruptible:'>
<arg index='0' declared_type='int' type='i' name='sourceGroupId'/>
<arg index='1' declared_type='BOOL' type='B' name='isNonInterruptible'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='soundSourceForSound:sourceGroupId:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<arg index='1' declared_type='int' type='i' name='sourceGroupId'/>
<retval declared_type='CDSoundSource*' type='@'/>
</method>
<method selector='sourceGroupEnabled:'>
<arg index='0' declared_type='int' type='i' name='sourceGroupId'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sourceGroupTotal'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='sourceTotal'>
<retval declared_type='int' type='i'/>
</method>
<method selector='stopAllSounds'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopSound:'>
<arg index='0' declared_type='ALuint' type='I' name='sourceId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopSourceGroup:'>
<arg index='0' declared_type='int' type='i' name='sourceGroupId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unloadBuffer:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='CDSoundSource'>
<method selector='durationInSeconds'>
<retval declared_type='float' type='f'/>
</method>
<method selector='gain'>
<retval declared_type='float' type='f'/>
</method>
<method selector='init:sourceIndex:soundEngine:'>
<arg index='0' declared_type='ALuint' type='I' name='theSourceId'/>
<arg index='1' declared_type='int' type='i' name='index'/>
<arg index='2' declared_type='CDSoundEngine*' type='@' name='engine'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastError'>
<retval declared_type='ALenum' type='i'/>
</method>
<method selector='looping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pan'>
<retval declared_type='float' type='f'/>
</method>
<method selector='pitch'>
<retval declared_type='float' type='f'/>
</method>
<method selector='setGain:'>
<arg index='0' declared_type='float' type='f' name='gain'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLooping:'>
<arg index='0' declared_type='BOOL' type='B' name='looping'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPan:'>
<arg index='0' declared_type='float' type='f' name='pan'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPitch:'>
<arg index='0' declared_type='float' type='f' name='pitch'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSoundId:'>
<arg index='0' declared_type='int' type='i' name='soundId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='soundId'>
<retval declared_type='int' type='i'/>
</method>
</class>
<class name='CDUtilities'>
<method class_method='true' selector='fullPathFromRelativePath:'>
<arg index='0' declared_type='NSString*' type='@' name='relPath'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='CDXPropertyModifierAction'>
<method class_method='true' selector='actionWithDuration:modifier:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='CDPropertyModifier*' type='@' name='aModifier'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='fadeBackgroundMusic:finalVolume:curveType:shouldStop:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='float' type='f' name='endVol'/>
<arg index='2' declared_type='tCDInterpolationType' type='i' name='curve'/>
<arg index='3' declared_type='BOOL' type='B' name='stop'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='fadeSoundEffect:finalVolume:curveType:shouldStop:effect:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='float' type='f' name='endVol'/>
<arg index='2' declared_type='tCDInterpolationType' type='i' name='curve'/>
<arg index='3' declared_type='BOOL' type='B' name='stop'/>
<arg index='4' declared_type='CDSoundSource*' type='@' name='effect'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='fadeSoundEffects:finalVolume:curveType:shouldStop:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='float' type='f' name='endVol'/>
<arg index='2' declared_type='tCDInterpolationType' type='i' name='curve'/>
<arg index='3' declared_type='BOOL' type='B' name='stop'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithDuration:modifier:'>
<arg index='0' declared_type='id' type='@' name='t'/>
<arg index='1' declared_type='CDPropertyModifier*' type='@' name='aModifier'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='audioPlayerBeginInterruption:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<arg index='1' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerDidFinishPlaying:successfully:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<arg index='1' declared_type='BOOL' type='B' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='audioPlayerEndInterruption:withFlags:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<arg index='1' declared_type='NSUInteger' type='I' type64='Q' name='flags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='beginInterruption'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cdAudioSourceDidFinishPlaying:'>
<arg index='0' declared_type='CDLongAudioSource*' type='@' name='audioSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cdAudioSourceFileDidChange:'>
<arg index='0' declared_type='CDLongAudioSource*' type='@' name='audioSource'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='endInterruption'>
<retval declared_type='void' type='v'/>
</method>
<method selector='endInterruptionWithFlags:'>
<arg index='0' declared_type='NSUInteger' type='I' type64='Q' name='flags'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='inputIsAvailableChanged:'>
<arg index='0' declared_type='BOOL' type='B' name='isInputAvailable'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='mute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pause'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='play'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rewind'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='enabledValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMute:'>
<arg index='0' declared_type='BOOL' type='B' name='muteValue'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stop'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='SimpleAudioEngine'>
<method selector='backgroundMusicVolume'>
<retval declared_type='float' type='f'/>
</method>
<method selector='effectsVolume'>
<retval declared_type='float' type='f'/>
</method>
<method class_method='true' selector='end'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isBackgroundMusicPlaying'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pauseBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='playBackgroundMusic:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='playBackgroundMusic:loop:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<arg index='1' declared_type='BOOL' type='B' name='loop'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='playEffect:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='ALuint' type='I'/>
</method>
<method selector='playEffect:pitch:pan:gain:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<arg index='1' declared_type='Float32' type='f' name='pitch'/>
<arg index='2' declared_type='Float32' type='f' name='pan'/>
<arg index='3' declared_type='Float32' type='f' name='gain'/>
<retval declared_type='ALuint' type='I'/>
</method>
<method selector='preloadBackgroundMusic:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='preloadEffect:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resumeBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rewindBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundMusicVolume:'>
<arg index='0' declared_type='float' type='f' name='backgroundMusicVolume'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEffectsVolume:'>
<arg index='0' declared_type='float' type='f' name='effectsVolume'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedEngine'>
<retval declared_type='SimpleAudioEngine*' type='@'/>
</method>
<method selector='soundSourceForFile:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='CDSoundSource*' type='@'/>
</method>
<method selector='stopBackgroundMusic'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopEffect:'>
<arg index='0' declared_type='ALuint' type='I' name='soundId'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unloadEffect:'>
<arg index='0' declared_type='NSString*' type='@' name='filePath'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='willPlayBackgroundMusic'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<informal_protocol name='AVAudioPlayerDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='audioPlayerBeginInterruption:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8@12' type64='v32@0:8@16@24' selector='audioPlayerDecodeErrorDidOccur:error:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<arg index='1' declared_type='NSError*' type='@' name='error'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8B12' type64='v28@0:8@16B24' selector='audioPlayerDidFinishPlaying:successfully:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<arg index='1' declared_type='BOOL' type='B' name='flag'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='audioPlayerEndInterruption:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4@8I12' type64='v32@0:8@16Q24' selector='audioPlayerEndInterruption:withFlags:'>
<arg index='0' declared_type='AVAudioPlayer*' type='@' name='player'/>
<arg index='1' declared_type='NSUInteger' type='I' type64='Q' name='flags'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AVAudioSessionDelegate'>
<method type='v8@0:4' type64='v16@0:8' selector='beginInterruption'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' type64='v16@0:8' selector='endInterruption'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4I8' type64='v24@0:8Q16' selector='endInterruptionWithFlags:'>
<arg index='0' declared_type='NSUInteger' type='I' type64='Q' name='flags'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' type64='v20@0:8B16' selector='inputIsAvailableChanged:'>
<arg index='0' declared_type='BOOL' type='B' name='isInputAvailable'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CDAudioInterruptProtocol'>
<method type='B8@0:4' type64='B16@0:8' selector='enabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B8@0:4' type64='B16@0:8' selector='mute'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='v12@0:4B8' type64='v20@0:8B16' selector='setEnabled:'>
<arg index='0' declared_type='BOOL' type='B' name='enabledValue'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' type64='v20@0:8B16' selector='setMute:'>
<arg index='0' declared_type='BOOL' type='B' name='muteValue'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='CDAudioTransportProtocol'>
<method type='B8@0:4' type64='B16@0:8' selector='pause'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B8@0:4' type64='B16@0:8' selector='play'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B8@0:4' type64='B16@0:8' selector='rewind'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='B8@0:4' type64='B16@0:8' selector='stop'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='CDLongAudioSourceDelegate'>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='cdAudioSourceDidFinishPlaying:'>
<arg index='0' declared_type='CDLongAudioSource*' type='@' name='audioSource'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' type64='v24@0:8@16' selector='cdAudioSourceFileDidChange:'>
<arg index='0' declared_type='CDLongAudioSource*' type='@' name='audioSource'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
