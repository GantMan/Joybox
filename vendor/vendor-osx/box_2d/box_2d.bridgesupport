<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='B2DAABB' type='{B2DAABB=&quot;lowerBound&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;upperBound&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}}' type64='{B2DAABB=&quot;lowerBound&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;upperBound&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}}'>
<field name='lowerBound' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='upperBound' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
</struct>
<struct name='B2DBodyDef' type='{B2DBodyDef=&quot;type&quot;i&quot;position&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;angle&quot;f&quot;linearVelocity&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;angularVelocity&quot;f&quot;linearDamping&quot;f&quot;angularDamping&quot;f&quot;allowSleep&quot;B&quot;awake&quot;B&quot;fixedRotation&quot;B&quot;bullet&quot;B&quot;active&quot;B&quot;gravityScale&quot;f}' type64='{B2DBodyDef=&quot;type&quot;i&quot;position&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;angle&quot;d&quot;linearVelocity&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;angularVelocity&quot;d&quot;linearDamping&quot;d&quot;angularDamping&quot;d&quot;allowSleep&quot;B&quot;awake&quot;B&quot;fixedRotation&quot;B&quot;bullet&quot;B&quot;active&quot;B&quot;gravityScale&quot;d}'>
<field name='type' type='i' declared_type='B2DBodyTypes'/>
<field name='position' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='angle' type='f' type64='d' declared_type='CGFloat'/>
<field name='linearVelocity' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='angularVelocity' type='f' type64='d' declared_type='CGFloat'/>
<field name='linearDamping' type='f' type64='d' declared_type='CGFloat'/>
<field name='angularDamping' type='f' type64='d' declared_type='CGFloat'/>
<field name='allowSleep' type='B' declared_type='_Bool'/>
<field name='awake' type='B' declared_type='_Bool'/>
<field name='fixedRotation' type='B' declared_type='_Bool'/>
<field name='bullet' type='B' declared_type='_Bool'/>
<field name='active' type='B' declared_type='_Bool'/>
<field name='gravityScale' type='f' type64='d' declared_type='CGFloat'/>
</struct>
<struct name='B2DFixtureDef' type='{B2DFixtureDef=&quot;shape&quot;@&quot;B2DShape&quot;&quot;userData&quot;@&quot;friction&quot;f&quot;restitution&quot;f&quot;density&quot;f&quot;isSensor&quot;B}' type64='{B2DFixtureDef=&quot;shape&quot;@&quot;B2DShape&quot;&quot;userData&quot;@&quot;friction&quot;d&quot;restitution&quot;d&quot;density&quot;d&quot;isSensor&quot;B}'>
<field name='shape' type='@&quot;B2DShape&quot;' declared_type='B2DShape*'/>
<field name='userData' type='@' declared_type='id'/>
<field name='friction' type='f' type64='d' declared_type='CGFloat'/>
<field name='restitution' type='f' type64='d' declared_type='CGFloat'/>
<field name='density' type='f' type64='d' declared_type='CGFloat'/>
<field name='isSensor' type='B' declared_type='BOOL'/>
</struct>
<struct name='B2DMassData' type='{B2DMassData=&quot;mass&quot;f&quot;center&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;rotationalInertia&quot;f}' type64='{B2DMassData=&quot;mass&quot;d&quot;center&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;rotationalInertia&quot;d}'>
<field name='mass' type='f' type64='d' declared_type='CGFloat'/>
<field name='center' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='rotationalInertia' type='f' type64='d' declared_type='CGFloat'/>
</struct>
<struct name='B2DProfile' type='{B2DProfile=&quot;step&quot;f&quot;collide&quot;f&quot;solve&quot;f&quot;solveInit&quot;f&quot;solveVelocity&quot;f&quot;solvePosition&quot;f&quot;broadphase&quot;f&quot;solveTOI&quot;f}' type64='{B2DProfile=&quot;step&quot;d&quot;collide&quot;d&quot;solve&quot;d&quot;solveInit&quot;d&quot;solveVelocity&quot;d&quot;solvePosition&quot;d&quot;broadphase&quot;d&quot;solveTOI&quot;d}'>
<field name='step' type='f' type64='d' declared_type='CGFloat'/>
<field name='collide' type='f' type64='d' declared_type='CGFloat'/>
<field name='solve' type='f' type64='d' declared_type='CGFloat'/>
<field name='solveInit' type='f' type64='d' declared_type='CGFloat'/>
<field name='solveVelocity' type='f' type64='d' declared_type='CGFloat'/>
<field name='solvePosition' type='f' type64='d' declared_type='CGFloat'/>
<field name='broadphase' type='f' type64='d' declared_type='CGFloat'/>
<field name='solveTOI' type='f' type64='d' declared_type='CGFloat'/>
</struct>
<struct name='B2DRayCastInput' type='{B2DRayCastInput=&quot;point1&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;point2&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;maxFraction&quot;f}' type64='{B2DRayCastInput=&quot;point1&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;point2&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;maxFraction&quot;d}'>
<field name='point1' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='point2' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='maxFraction' type='f' type64='d' declared_type='CGFloat'/>
</struct>
<struct name='B2DRayCastOutput' type='{B2DRayCastOutput=&quot;normal&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;fraction&quot;f}' type64='{B2DRayCastOutput=&quot;normal&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;fraction&quot;d}'>
<field name='normal' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='fraction' type='f' type64='d' declared_type='CGFloat'/>
</struct>
<struct name='B2DTransform' type='{B2DTransform=&quot;position&quot;{CGPoint=&quot;x&quot;f&quot;y&quot;f}&quot;angle&quot;f}' type64='{B2DTransform=&quot;position&quot;{CGPoint=&quot;x&quot;d&quot;y&quot;d}&quot;angle&quot;d}'>
<field name='position' type='{CGPoint=&quot;x&quot;f&quot;y&quot;f}' type64='{CGPoint=&quot;x&quot;d&quot;y&quot;d}' declared_type='CGPoint'/>
<field name='angle' type='f' type64='d' declared_type='CGFloat'/>
</struct>
<opaque name='B2DFilter' type='^{B2DFilter=}'/>
<enum name='kChainShapeType' value='3'/>
<enum name='kCircleShapeType' value='0'/>
<enum name='kDynamicBodyType' value='2'/>
<enum name='kEdgeShapeType' value='1'/>
<enum name='kKinematicBodyType' value='1'/>
<enum name='kPolygonShapeType' value='2'/>
<enum name='kStaticBodyType' value='0'/>
<enum name='kTypeCountShapeType' value='4'/>
<function name='B2DAABBMake'>
<arg name='lowerBound' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='upperBound' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{B2DAABB={CGPoint=ff}{CGPoint=ff}}' type64='{B2DAABB={CGPoint=dd}{CGPoint=dd}}' declared_type='B2DAABB'/>
</function>
<function name='B2DBodyDefMake'>
<retval type='{B2DBodyDef=i{CGPoint=ff}f{CGPoint=ff}fffBBBBBf}' type64='{B2DBodyDef=i{CGPoint=dd}d{CGPoint=dd}dddBBBBBd}' declared_type='B2DBodyDef'/>
</function>
<function name='B2DFilterMake'>
<arg name='categoryBits' type='S' declared_type='uint16'/>
<arg name='maskBits' type='S' declared_type='uint16'/>
<arg name='groupIndex' type='i' declared_type='int'/>
<retval type='{B2DFilter=SSi}' declared_type='B2DFilter'/>
</function>
<function name='B2DFixtureDefMake'>
<retval type='{B2DFixtureDef=@@fffB}' type64='{B2DFixtureDef=@@dddB}' declared_type='B2DFixtureDef'/>
</function>
<function name='B2DMassDataMake'>
<arg name='mass' type='f' type64='d' declared_type='CGFloat'/>
<arg name='center' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='rotationalInertia' type='f' type64='d' declared_type='CGFloat'/>
<retval type='{B2DMassData=f{CGPoint=ff}f}' type64='{B2DMassData=d{CGPoint=dd}d}' declared_type='B2DMassData'/>
</function>
<function name='B2DProfileMake'>
<arg name='step' type='f' type64='d' declared_type='CGFloat'/>
<arg name='collide' type='f' type64='d' declared_type='CGFloat'/>
<arg name='solve' type='f' type64='d' declared_type='CGFloat'/>
<arg name='solveInit' type='f' type64='d' declared_type='CGFloat'/>
<arg name='solveVelocity' type='f' type64='d' declared_type='CGFloat'/>
<arg name='solvePosition' type='f' type64='d' declared_type='CGFloat'/>
<arg name='broadphase' type='f' type64='d' declared_type='CGFloat'/>
<arg name='solveTOI' type='f' type64='d' declared_type='CGFloat'/>
<retval type='{B2DProfile=ffffffff}' type64='{B2DProfile=dddddddd}' declared_type='B2DProfile'/>
</function>
<function name='B2DRayCastInputMake'>
<arg name='point1' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='point2' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='maxFraction' type='f' type64='d' declared_type='CGFloat'/>
<retval type='{B2DRayCastInput={CGPoint=ff}{CGPoint=ff}f}' type64='{B2DRayCastInput={CGPoint=dd}{CGPoint=dd}d}' declared_type='B2DRayCastInput'/>
</function>
<function name='B2DRayCastOutputMake'>
<arg name='normal' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='fraction' type='f' type64='d' declared_type='CGFloat'/>
<retval type='{B2DRayCastOutput={CGPoint=ff}f}' type64='{B2DRayCastOutput={CGPoint=dd}d}' declared_type='B2DRayCastOutput'/>
</function>
<function name='B2DTransformMake'>
<arg name='position' type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='angle' type='f' type64='d' declared_type='CGFloat'/>
<retval type='{B2DTransform={CGPoint=ff}f}' type64='{B2DTransform={CGPoint=dd}d}' declared_type='B2DTransform'/>
</function>
<class name='B2DBody'>
<method selector='addFixtureForShape:friction:restitution:density:isSensor:'>
<arg name='shape' type='@' index='0' declared_type='B2DShape*'/>
<arg name='friction' type='f' index='1' type64='d' declared_type='CGFloat'/>
<arg name='restitution' type='f' index='2' type64='d' declared_type='CGFloat'/>
<arg name='density' type='f' index='3' type64='d' declared_type='CGFloat'/>
<arg name='isSensor' type='B' index='4' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='angle'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='angularDamping'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='angularVelocity'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='applyAngularImpulse:'>
<arg name='impulse' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForce:atLocation:asImpulse:'>
<arg name='force' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='location' type='{CGPoint=ff}' index='1' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='asImpulse' type='B' index='2' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForce:atPoint:'>
<arg name='force' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='point' type='{CGPoint=ff}' index='1' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyForceToCenter:'>
<arg name='force' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyLinearImpulse:atPoint:'>
<arg name='impulse' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='point' type='{CGPoint=ff}' index='1' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTorque:'>
<arg name='torque' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTorque:asImpulse:'>
<arg name='torque' type='f' index='0' type64='d' declared_type='CGFloat'/>
<arg name='impulse' type='B' index='1' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='awake'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='body'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='bullet'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='center'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='createFixture:'>
<arg name='fixtureDefinition' type='{B2DFixtureDef=@@fffB}' index='0' type64='{B2DFixtureDef=@@dddB}' declared_type='B2DFixtureDef'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='createFixtureWithShape:andDensity:'>
<arg name='shape' type='@' index='0' declared_type='B2DShape*'/>
<arg name='density' type='f' index='1' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='destroyFixture:'>
<arg name='fixture' type='@' index='0' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dump'>
<retval type='v' declared_type='void'/>
</method>
<method selector='fixedRotation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='fixtureList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='gravityScale'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='inertia'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='initWithBody:'>
<arg name='boxBody' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isActive'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isAwake'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isBullet'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isEqualToBody:'>
<arg name='aBody' type='@' index='0' declared_type='B2DBody*'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isFixedRotation'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='isSleepingAllowed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='linearDamping'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='linearVelocity'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='linearVelocityFromLocalPoint:'>
<arg name='localPoint' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='linearVelocityFromWorldPoint:'>
<arg name='worldPoint' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='localCenter'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='localPoint:'>
<arg name='worldPoint' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='localVector:'>
<arg name='worldVector' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='mass'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='massData'>
<retval type='{B2DMassData=f{CGPoint=ff}f}' type64='{B2DMassData=d{CGPoint=dd}d}' declared_type='B2DMassData'/>
</method>
<method selector='next'>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='resetMassData'>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularDamping:'>
<arg name='angularDamping' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAngularVelocity:'>
<arg name='angularVelocity' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAwake:'>
<arg name='awake' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBody:'>
<arg name='body' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setBullet:'>
<arg name='bullet' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixedRotation:'>
<arg name='fixedRotation' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravityScale:'>
<arg name='gravityScale' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearDamping:'>
<arg name='linearDamping' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setLinearVelocity:'>
<arg name='linearVelocity' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setMassData:'>
<arg name='massData' type='{B2DMassData=f{CGPoint=ff}f}' index='0' type64='{B2DMassData=d{CGPoint=dd}d}' declared_type='B2DMassData'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg name='position' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSleepingAllowed:'>
<arg name='sleepingAllowed' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setTransformWithPosition:andAngle:'>
<arg name='position' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='angle' type='f' index='1' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setType:'>
<arg name='type' type='i' index='0' declared_type='B2DBodyTypes'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg name='userData' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='sleepingAllowed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='transform'>
<retval type='{B2DTransform={CGPoint=ff}f}' type64='{B2DTransform={CGPoint=dd}d}' declared_type='B2DTransform'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DBodyTypes'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
<method selector='worldCenter'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='worldPoint:'>
<arg name='localPoint' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='worldVector:'>
<arg name='localVector' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DChainShape'>
<method selector='createChainWithVertices:andVertexCount:'>
<arg name='vertices' type='^{CGPoint=ff}' index='0' type64='^{CGPoint=dd}' declared_type='CGPoint*'/>
<arg name='vertexCount' type='i' index='1' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='createLoopWithVertices:andVertexCount:'>
<arg name='vertices' type='^{CGPoint=ff}' index='0' type64='^{CGPoint=dd}' declared_type='CGPoint*'/>
<arg name='vertexCount' type='i' index='1' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='getChildEdge:withIndex:'>
<arg name='edgeShape' type='@' index='0' declared_type='B2DEdgeShape*'/>
<arg name='index' type='i' index='1' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='hasNextVertex'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasPreviousVertex'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='nextVertex'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='previousVertex'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='setNextVertex:'>
<arg name='vertex' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPreviousVertex:'>
<arg name='vertex' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='vertexCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='vertices'>
<retval type='^{CGPoint=ff}' type64='^{CGPoint=dd}' declared_type='CGPoint*'/>
</method>
</class>
<class name='B2DCircleShape'>
<method selector='getSupport:'>
<arg name='direction' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='getSupportVertex:'>
<arg name='direction' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='getVertex:'>
<arg name='index' type='i' index='0' type64='q' declared_type='NSInteger'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='initWithRadius:'>
<arg name='radius' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='vertexCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
</class>
<class name='B2DContactFilter'>
<method selector='contactFilter'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='setContactFilter:'>
<arg name='contactFilter' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setShouldCollide:'>
<arg name='shouldCollide' type='@?' index='0' declared_type='shouldCollideCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='shouldCollide'>
<retval type='@?' declared_type='shouldCollideCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</retval>
</method>
</class>
<class name='B2DContactListener'>
<method selector='beginContact'>
<retval type='@?' declared_type='beginContactCallback' function_pointer='true'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='contactListener'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='endContact'>
<retval type='@?' declared_type='endContactCallback' function_pointer='true'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setBeginContact:'>
<arg name='beginContact' type='@?' index='0' declared_type='beginContactCallback' function_pointer='true'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactListener:'>
<arg name='contactListener' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndContact:'>
<arg name='endContact' type='@?' index='0' declared_type='endContactCallback' function_pointer='true'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DDestructionListener'>
<method selector='destructionListener'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='fixtureSayGoodbye'>
<retval type='@?' declared_type='fixtureSayGoodbyeCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setDestructionListener:'>
<arg name='destructionListener' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixtureSayGoodbye:'>
<arg name='fixtureSayGoodbye' type='@?' index='0' declared_type='fixtureSayGoodbyeCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DEdgeShape'>
<method selector='endAdjacentVertex'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='endVertex'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='hasEndAdjacentVertex'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='hasStartAdjacentVertex'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='initWithStartPoint:endPoint:'>
<arg name='startPoint' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='endPoint' type='{CGPoint=ff}' index='1' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithStartVertex:endVertex:'>
<arg name='startVertex' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='endVertex' type='{CGPoint=ff}' index='1' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='startAdjacentVertex'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='startVertex'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
</class>
<class name='B2DFixture'>
<method selector='aabb:'>
<arg name='childIndex' type='i' index='0' type64='q' declared_type='NSInteger'/>
<retval type='{B2DAABB={CGPoint=ff}{CGPoint=ff}}' type64='{B2DAABB={CGPoint=dd}{CGPoint=dd}}' declared_type='B2DAABB'/>
</method>
<method selector='body'>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='density'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='dump:'>
<arg name='bodyIndex' type='i' index='0' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='filterData'>
<retval type='{B2DFilter=SSi}' declared_type='B2DFilter'/>
</method>
<method selector='fixture'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='friction'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='initWithFixture:'>
<arg name='boxFixture' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSensor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='massData'>
<retval type='{B2DMassData=f{CGPoint=ff}f}' type64='{B2DMassData=d{CGPoint=dd}d}' declared_type='B2DMassData'/>
</method>
<method selector='next'>
<retval type='@' declared_type='B2DFixture*'/>
</method>
<method selector='rayCastWithOutput:input:andChildIndex:'>
<arg name='output' type='^{B2DRayCastOutput={CGPoint=ff}f}' index='0' type64='^{B2DRayCastOutput={CGPoint=dd}d}' declared_type='B2DRayCastOutput*'/>
<arg name='input' type='{B2DRayCastInput={CGPoint=ff}{CGPoint=ff}f}' index='1' type64='{B2DRayCastInput={CGPoint=dd}{CGPoint=dd}d}' declared_type='B2DRayCastInput'/>
<arg name='childIndex' type='i' index='2' type64='q' declared_type='NSInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='refilter'>
<retval type='v' declared_type='void'/>
</method>
<method selector='restitution'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='sensor'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setDensity:'>
<arg name='density' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFilterData:'>
<arg name='filterData' type='{B2DFilter=SSi}' index='0' declared_type='B2DFilter'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFixture:'>
<arg name='fixture' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setFriction:'>
<arg name='friction' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setRestitution:'>
<arg name='restitution' type='f' index='0' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSensor:'>
<arg name='sensor' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setUserData:'>
<arg name='userData' type='@' index='0' declared_type='id'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='@' declared_type='B2DShape*'/>
</method>
<method selector='testPoint:'>
<arg name='point' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DShapeTypes'/>
</method>
<method selector='userData'>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DPolygonShape'>
<method selector='centroid'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='getVertex:'>
<arg name='index' type='i' index='0' type64='q' declared_type='NSInteger'/>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='initWithBoxSize:'>
<arg name='boxSize' type='{CGSize=ff}' index='0' type64='{CGSize=dd}' declared_type='CGSize'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHalfWidth:andHalfHeight:'>
<arg name='halfWidth' type='f' index='0' type64='d' declared_type='CGFloat'/>
<arg name='halfHeight' type='f' index='1' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithHalfWidth:halfHeight:center:andAngle:'>
<arg name='halfWidth' type='f' index='0' type64='d' declared_type='CGFloat'/>
<arg name='halfHeight' type='f' index='1' type64='d' declared_type='CGFloat'/>
<arg name='center' type='{CGPoint=ff}' index='2' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='angle' type='f' index='3' type64='d' declared_type='CGFloat'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='initWithVertices:andVertexCount:'>
<arg name='vertices' type='^{CGPoint=ff}' index='0' type64='^{CGPoint=dd}' declared_type='CGPoint*'/>
<arg name='vertexCount' type='i' index='1' type64='q' declared_type='NSInteger'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='normals'>
<retval type='^{CGPoint=ff}' type64='^{CGPoint=dd}' declared_type='CGPoint*'/>
</method>
<method selector='vertexCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='vertices'>
<retval type='^{CGPoint=ff}' type64='^{CGPoint=dd}' declared_type='CGPoint*'/>
</method>
</class>
<class name='B2DQueryCallback'>
<method selector='queryCallback'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='reportFixture'>
<retval type='@?' declared_type='reportQueryFixtureCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</retval>
</method>
<method selector='setQueryCallback:'>
<arg name='queryCallback' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReportFixture:'>
<arg name='reportFixture' type='@?' index='0' declared_type='reportQueryFixtureCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<retval type='B' declared_type='_Bool'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DRayCastCallback'>
<method selector='rayCastCallback'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='reportFixture'>
<retval type='@?' declared_type='reportRaycastFixtureCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg type='f' type64='d' declared_type='CGFloat'/>
<retval type='f' declared_type='float'/>
</retval>
</method>
<method selector='setRayCastCallback:'>
<arg name='rayCastCallback' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setReportFixture:'>
<arg name='reportFixture' type='@?' index='0' declared_type='reportRaycastFixtureCallback' function_pointer='true'>
<arg type='@' declared_type='B2DFixture*'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg type='f' type64='d' declared_type='CGFloat'/>
<retval type='f' declared_type='float'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DShape'>
<method selector='childCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='computeAABB:withTransform:andChildIndex:'>
<arg name='aabb' type='^{B2DAABB={CGPoint=ff}{CGPoint=ff}}' index='0' type64='^{B2DAABB={CGPoint=dd}{CGPoint=dd}}' declared_type='B2DAABB*'/>
<arg name='transform' type='{B2DTransform={CGPoint=ff}f}' index='1' type64='{B2DTransform={CGPoint=dd}d}' declared_type='B2DTransform'/>
<arg name='childIndex' type='i' index='2' type64='q' declared_type='NSInteger'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='computeMass:withDensity:'>
<arg name='massData' type='^{B2DMassData=f{CGPoint=ff}f}' index='0' type64='^{B2DMassData=d{CGPoint=dd}d}' declared_type='B2DMassData*'/>
<arg name='density' type='f' index='1' type64='d' declared_type='CGFloat'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='initWithShape:'>
<arg name='boxShape' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='radius'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='rayCastWithOutput:input:transform:andChildren:'>
<arg name='output' type='^{B2DRayCastOutput={CGPoint=ff}f}' index='0' type64='^{B2DRayCastOutput={CGPoint=dd}d}' declared_type='B2DRayCastOutput*'/>
<arg name='input' type='{B2DRayCastInput={CGPoint=ff}{CGPoint=ff}f}' index='1' type64='{B2DRayCastInput={CGPoint=dd}{CGPoint=dd}d}' declared_type='B2DRayCastInput'/>
<arg name='transform' type='{B2DTransform={CGPoint=ff}f}' index='2' type64='{B2DTransform={CGPoint=dd}d}' declared_type='B2DTransform'/>
<arg name='childIndex' type='i' index='3' type64='q' declared_type='NSInteger'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='setShape:'>
<arg name='shape' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='testPointWithTransform:andPoint:'>
<arg name='transform' type='{B2DTransform={CGPoint=ff}f}' index='0' type64='{B2DTransform={CGPoint=dd}d}' declared_type='B2DTransform'/>
<arg name='point' type='{CGPoint=ff}' index='1' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='type'>
<retval type='i' declared_type='B2DShapeTypes'/>
</method>
</class>
<class name='B2DWorld'>
<method selector='addContactListener:'>
<arg name='contactListener' type='@' index='0' declared_type='B2DContactListener*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsSleeping'>
<retval type='B' declared_type='_Bool'/>
</method>
<method selector='autoClearForces'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='bodyCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='bodyList'>
<retval type='@' declared_type='NSArray*'/>
</method>
<method selector='clearForces'>
<retval type='v' declared_type='void'/>
</method>
<method selector='contactCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='continuousPhysics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createBody:'>
<arg name='bodyDefinition' type='{B2DBodyDef=i{CGPoint=ff}f{CGPoint=ff}fffBBBBBf}' index='0' type64='{B2DBodyDef=i{CGPoint=dd}d{CGPoint=dd}dddBBBBBd}' declared_type='B2DBodyDef'/>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='createBodyInPosition:type:'>
<arg name='position' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='bodyType' type='i' index='1' declared_type='B2DBodyTypes'/>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='destroyBody:'>
<arg name='body' type='@' index='0' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='dump'>
<retval type='v' declared_type='void'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='initWithWorld:'>
<arg name='boxWorld' type='@' index='0' declared_type='id'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isLocked'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='jointCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='profile'>
<retval type='{B2DProfile=ffffffff}' type64='{B2DProfile=dddddddd}' declared_type='B2DProfile'/>
</method>
<method selector='proxyCount'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='queryAABBWithCallback:andAABB:'>
<arg name='queryCallback' type='@' index='0' declared_type='B2DQueryCallback*'/>
<arg name='aabb' type='{B2DAABB={CGPoint=ff}{CGPoint=ff}}' index='1' type64='{B2DAABB={CGPoint=dd}{CGPoint=dd}}' declared_type='B2DAABB'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='rayCastWithCallback:andPoint1:andPoint2:'>
<arg name='rayCastCallback' type='@' index='0' declared_type='B2DRayCastCallback*'/>
<arg name='point1' type='{CGPoint=ff}' index='1' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<arg name='point2' type='{CGPoint=ff}' index='2' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='removeBody:'>
<arg name='body' type='@' index='0' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsSleeping:'>
<arg name='allowsSleeping' type='B' index='0' declared_type='_Bool'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAutoClearForces:'>
<arg name='autoClearForces' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactFilter:'>
<arg name='contactFilter' type='@' index='0' declared_type='B2DContactFilter*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactListener:'>
<arg name='contactListener' type='@' index='0' declared_type='B2DContactListener*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuousPhysics:'>
<arg name='continuousPhysics' type='B' index='0' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setDestructionListener:'>
<arg name='destructionListener' type='@' index='0' declared_type='B2DDestructionListener*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg name='gravity' type='{CGPoint=ff}' index='0' type64='{CGPoint=dd}' declared_type='CGPoint'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWorld:'>
<arg name='world' type='^i' index='0' declared_type='int*'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stepWithDelta:velocityInteractions:positionInteractions:'>
<arg name='delta' type='f' index='0' type64='d' declared_type='CGFloat'/>
<arg name='velocityInteractions' type='i' index='1' declared_type='int'/>
<arg name='positionInteractions' type='i' index='2' declared_type='int'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='treeBalance'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='treeHeight'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='treeQuality'>
<retval type='i' type64='q' declared_type='NSInteger'/>
</method>
<method selector='world'>
<retval type='^i' declared_type='int*'/>
</method>
</class>
</signatures>
